<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>istio on apcj@f5 blog</title>
    <link>/tags/istio/</link>
    <description>Recent content in istio on apcj@f5 blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learning Istio | JWT Auth</title>
      <link>/posts/learning-istio/jwt-auth/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/learning-istio/jwt-auth/</guid>
      <description>In this post, we will be looking at how Istio handles end user authentication/authorization based on JSON Web Tokens (JWT). JWT is commonly used in OAuth2.0 flows to specify the resources a client has access to, but there are a couple of things to verify before the client is given access:
 Is the JWT issued by the right party Is the client who they claim to be  The logic for the checks above are usually coded into the application.</description>
      <content>&lt;p&gt;In this post, we will be looking at how Istio handles end user authentication/authorization based on JSON Web Tokens (JWT). JWT is commonly used in OAuth2.0 flows to specify the resources a client has access to, but there are a couple of things to verify before the client is given access:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Is the JWT issued by the right party&lt;/li&gt;
&lt;li&gt;Is the client who they claim to be&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The logic for the checks above are usually coded into the application.&lt;/p&gt;
&lt;p&gt;Alternatively, as we will discover in this post, we can simplify the application by offloading this to Istio using the &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/request_authentication/&#34;&gt;RequestAuthentication&lt;/a&gt; and &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/&#34;&gt;AuthorizationPolicy&lt;/a&gt; resources.&lt;/p&gt;
&lt;h1 id=&#34;setup&#34;&gt;Setup&lt;/h1&gt;
&lt;h2 id=&#34;test-application&#34;&gt;Test application&lt;/h2&gt;
&lt;p&gt;For the test application, I will be using the &lt;a href=&#34;https://hub.docker.com/r/kennethreitz/httpbin/&#34;&gt;httpbin&lt;/a&gt; image as it exposes a &lt;code&gt;/headers&lt;/code&gt; endpoint which prints out the headers as seen by the application, allowing us to see the changes done by the sidecar proxy.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl apply -f - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: apps/v1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: Deployment
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  labels:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  replicas: 1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  selector:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    matchLabels:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  template:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      labels:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      containers:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      - image: kennethreitz/httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        name: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;---
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: v1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: Service
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  labels:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  ports:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - name: http  # this is important. See Additional Learnings below
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    port: 80
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    protocol: TCP
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    targetPort: 80
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  selector:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jwt-provider&#34;&gt;JWT provider&lt;/h2&gt;
&lt;p&gt;The JWT used in most of the examples in this post is obtained from Auth0 via the &lt;a href=&#34;https://auth0.com/docs/authorization/flows/call-your-api-using-the-client-credentials-flow&#34;&gt;client credentials flow&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Get access token&lt;/span&gt;
$ BASE_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://leonseng.au.auth0.com
$ APP_CLIENT_ID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;Auth0 app client ID&amp;gt;
$ APP_CLIENT_SECRET&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;Auth0 app client secret&amp;gt;
$ API_IDENTIFIER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;Auth0 API identifier&amp;gt;
$ ACCESS_TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -s --request POST &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASE_URL&lt;span style=&#34;color:#e6db74&#34;&gt;/oauth/token&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content-type: application/x-www-form-urlencoded&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --data grant_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;client_credentials &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --data client_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$APP_CLIENT_ID &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --data client_secret&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$APP_CLIENT_SECRET &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --data audience&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$API_IDENTIFIER | jq -r .access_token&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Check content of JWT&lt;/span&gt;
$ jq -R &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;split(&amp;#34;.&amp;#34;) | .[0],.[1] | @base64d | fromjson&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $ACCESS_TOKEN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RS256&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;typ&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;qv9xb5h9OYy-uJgVyDEyx&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://leonseng.au.auth0.com/&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;QWPjwvmVTLVJiQejcPJim0CKR3pxtgd3@clients&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aud&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-jwt-test&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;: 1636331240,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;: 1636331300,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;azp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;QWPjwvmVTLVJiQejcPJim0CKR3pxtgd3&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;read:database write:database&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gty&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;client-credentials&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;requestauthentication&#34;&gt;RequestAuthentication&lt;/h1&gt;
&lt;p&gt;Istio&amp;rsquo;s &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/request_authentication/&#34;&gt;RequestAuthentication&lt;/a&gt; is responsible for validating the JWT in a request is signed by the expected issuer, and that the payload has not been tampered with.&lt;/p&gt;
&lt;p&gt;Below is an example where we specify the JWT issuer and the JSON Web Key Set (JWKS) for JWT validation. The decoded JWT payload can be passed onto the application in a HTTP header via the &lt;code&gt;outputPayloadToHeader&lt;/code&gt; field, allowing application to access the trusted claim without having to perform token validation itself.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl apply -f - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: security.istio.io/v1beta1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: RequestAuthentication
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: &amp;#34;httpbin-jwt-req-auth&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  selector:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    matchLabels:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  jwtRules:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - issuer: &amp;#34;https://leonseng.au.auth0.com/&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    jwksUri: &amp;#34;https://leonseng.au.auth0.com/.well-known/jwks.json&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    outputPayloadToHeader: x-jwt-payload
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s a test to show that our request with the right JWT can go through&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ RESPONSE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -s -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$ACCESS_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/headers&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
$ echo $RESPONSE | jq .
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*/*&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Length&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpbin&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;curl/7.79.1-DEV&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Parentspanid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;40f941f2847fb38d&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Sampled&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Spanid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7c93024a6eb09cf5&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Traceid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;38ab74cb85a129d240f941f2847fb38d&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Envoy-Attempt-Count&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Forwarded-Client-Cert&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;By=spiffe://cluster.local/ns/default/sa/default;Hash=dc1fd96b48b91947ef1bfeeb6a9755164343eb982eeb2d29373e3521a90350dc;Subject=\&amp;#34;\&amp;#34;;URI=spiffe://cluster.local/ns/default/sa/default&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Jwt-Payload&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eyJpc3MiOiJodHRwczovL2xlb25zZW5nLmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJRV1Bqd3ZtVlRMVkppUWVqY1BKaW0wQ0tSM3B4dGdkM0BjbGllbnRzIiwiYXVkIjoiaXN0aW8tand0LXRlc3QiLCJpYXQiOjE2MzY0MjkwODUsImV4cCI6MTYzNjUxNTQ4NSwiYXpwIjoiUVdQand2bVZUTFZKaVFlamNQSmltMENLUjNweHRnZDMiLCJzY29wZSI6InJlYWQ6ZGF0YWJhc2Ugd3JpdGU6ZGF0YWJhc2UiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can see that the decoded payload is accessible by the application in the &lt;code&gt;X-Jwt-Payload&lt;/code&gt; header after performing a base64 decode&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ FORWARDED_PAYLOAD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $RESPONSE | jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.headers.&amp;#34;X-Jwt-Payload&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
$ echo $FORWARDED_PAYLOAD | base64 -d | jq .
base64: invalid input
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://leonseng.au.auth0.com/&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;QWPjwvmVTLVJiQejcPJim0CKR3pxtgd3@clients&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aud&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-jwt-test&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;: 1636429085,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;: 1636515485,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;azp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;QWPjwvmVTLVJiQejcPJim0CKR3pxtgd3&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;read:database write:database&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gty&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;client-credentials&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Malformed, expired and JWT issued by other issuers will be rejected:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Malformed token&lt;/span&gt;
$ curl -s -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer bad&amp;#34;&lt;/span&gt; httpbin/headers
Jwt is not in the form of Header.Payload.Signature with two dots and &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; sections

&lt;span style=&#34;color:#75715e&#34;&gt;# Expired token&lt;/span&gt;
$ curl -s -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$ACCESS_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/headers
Jwt is expired

&lt;span style=&#34;color:#75715e&#34;&gt;# Valid JWT from another issuer - jwt.io&lt;/span&gt;
INVALID_TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.NHVaYe26MbtOYhSKkoKYdFVomg4i8ZJd8_-RU8VNbftc4TSMb4bXP3l3YlNWACwyXPGffz5aXHc6lty1Y2t4SWRqGteragsVdZufDn5BlnJl9pdR_kdVFUsra2rWKEofkZeIC4yWytE58sMIihvo9H1ScmmVwBcQP6XETqYd0aSHp1gOa9RdUPDvoXQ5oqygTqVtxaDr6wUFKrKItgBMzWIdNZ6y7O9E0DhEPTbE9rfBo6KTFsHAZnMg4k68CDp2woYIaXbmYTWcvbzIuHO7_37GT79XdIwkm95QJ7hYC9RiwrV7mesbY4PAahERJawntho0my942XheVLmGwLMBkQ
$ curl -s -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$INVALID_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/headers
Jwks doesn&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t have key to match kid or alg from Jwt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Requests without JWT is expected to fail, but &lt;strong&gt;it didn&amp;rsquo;t&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ curl -s httpbin/headers
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*/*&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Length&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpbin&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;curl/7.79.1-DEV&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Parentspanid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;de8e7a515c92e784&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Sampled&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Spanid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a2994910ea2fd7f2&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Traceid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;11f49e2d3230c711de8e7a515c92e784&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Envoy-Attempt-Count&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Forwarded-Client-Cert&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;By=spiffe://cluster.local/ns/default/sa/default;Hash=b01278f0dac370955d49f07b1484118c6581fea591a3843d5ccd341ef7b872e6;Subject=\&amp;#34;\&amp;#34;;URI=spiffe://cluster.local/ns/default/sa/default&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This was unexpected to me, but it is a &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/request_authentication/&#34;&gt;documented behaviour&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A request that does not contain any authentication credentials will be accepted but will not have any authenticated identity. To restrict access to authenticated requests only, this should be accompanied by an authorization rule.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;authorizationpolicy&#34;&gt;AuthorizationPolicy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/&#34;&gt;AuthorizationPolicy&lt;/a&gt; further extends RBAC through the configuration of more granular rules, covering:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#who-is-the-requester&#34;&gt;who is the requester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what-is-the-requester-trying-to-do&#34;&gt;what the requester is trying to do&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#additional-conditions-in-the-jwt&#34;&gt;additional conditions in the JWT&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below is an example which we will be using&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl apply -f - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: security.istio.io/v1beta1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: AuthorizationPolicy
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: httpbin-authz-policy
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  selector:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    matchLabels:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      app: httpbin
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  rules:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - from:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - source:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        requestPrincipals: [&amp;#34;https://leonseng.au.auth0.com//QWPjwvmVTLVJiQejcPJim0CKR3pxtgd3@clients&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    to:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - operation:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        methods: [&amp;#34;GET&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        paths: [&amp;#34;/headers&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    when:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - key: request.auth.claims[aud]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      values: [&amp;#34;httpbin&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - key: request.auth.claims[scope]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      values: [&amp;#34;write:database, fetch:email&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A quick test to verify that it hasn&amp;rsquo;t broken our setup&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ curl -s -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$ACCESS_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/headers
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*/*&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Length&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpbin&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;curl/7.79.1-DEV&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Parentspanid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;60c70087740ac4fa&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Sampled&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Spanid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a4f01ac9e90d5ac5&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-B3-Traceid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;afcacf8ed3355d7160c70087740ac4fa&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Envoy-Attempt-Count&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Forwarded-Client-Cert&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;By=spiffe://cluster.local/ns/default/sa/default;Hash=72d075873d9fb6b17553f5b428fac8ad0168162e917b74f44c42b7e145267507;Subject=\&amp;#34;\&amp;#34;;URI=spiffe://cluster.local/ns/default/sa/default&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-Jwt-Payload&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eyJpc3MiOiJodHRwczovL2xlb25zZW5nLmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJRV1Bqd3ZtVlRMVkppUWVqY1BKaW0wQ0tSM3B4dGdkM0BjbGllbnRzIiwiYXVkIjoiaXN0aW8tand0LXRlc3QiLCJpYXQiOjE2MzYzNzUxNDMsImV4cCI6MTYzNjQ2MTU0MywiYXpwIjoiUVdQand2bVZUTFZKaVFlamNQSmltMENLUjNweHRnZDMiLCJzY29wZSI6InJlYWQ6ZGF0YWJhc2Ugd3JpdGU6ZGF0YWJhc2UiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;who-is-the-requester&#34;&gt;Who is the requester&lt;/h2&gt;
&lt;p&gt;The identity of the requester using JWT can be specified in the &lt;code&gt;requestPrincipals&lt;/code&gt; field as documented &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/#Source&#34;&gt;here&lt;/a&gt;. Istio constructs the identity from the JWT payload values in the format of &lt;code&gt;&amp;lt;iss&amp;gt;/&amp;lt;sub&amp;gt;&lt;/code&gt;. However, if you just want to enforce the presence of a valid JWT (regardless of the identity), &lt;code&gt;requestPrincipals&lt;/code&gt; can be set to &lt;code&gt;[*]&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt;:
- &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;requestPrincipals&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://leonseng.au.auth0.com//QWPjwvmVTLVJiQejcPJim0CKR3pxtgd3@clients&amp;#34;&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;# iss/sub&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Requests without a JWT or with a different user/subject will be denied&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# No JWT provided&lt;/span&gt;
$ curl -s httpbin/headers
RBAC: access denied

&lt;span style=&#34;color:#75715e&#34;&gt;# JWT with different user/subject&lt;/span&gt;
$ jq -R &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;split(&amp;#34;.&amp;#34;) | .[0],.[1] | @base64d | fromjson&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $ACCESS_TOKEN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RS256&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;typ&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;qv9xb5h9OYy-uJgVyDEyx&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://leonseng.au.auth0.com/&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uoPlJVCJID9UxJS1jdOMPcr9Gmz2TGgP@clients&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aud&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-jwt-test&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;: 1636375387,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;: 1636461787,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;azp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uoPlJVCJID9UxJS1jdOMPcr9Gmz2TGgP&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;read:database write:database&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gty&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;client-credentials&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
$ curl -s -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$ACCESS_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/headers
RBAC: access denied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-is-the-requester-trying-to-do&#34;&gt;What is the requester trying to do&lt;/h2&gt;
&lt;p&gt;Next, we can &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/#Operation&#34;&gt;restrict which HTTP verbs and path a requester has access to&lt;/a&gt;. In our example, we are only allowing &lt;code&gt;GET&lt;/code&gt; requests to &lt;code&gt;/headers&lt;/code&gt; path&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;to&lt;/span&gt;:
- &lt;span style=&#34;color:#f92672&#34;&gt;operation&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;methods&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;]
    &lt;span style=&#34;color:#f92672&#34;&gt;paths&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/headers&amp;#34;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Request using another HTTP verb and/or accessing another path will not be allowed&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# POST to /post&lt;/span&gt;
$ curl -s -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$ACCESS_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/post
RBAC: access denied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;additional-conditions-in-the-jwt&#34;&gt;Additional conditions in the JWT&lt;/h2&gt;
&lt;p&gt;Lastly, Istio also enables the evaluation of additional &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/conditions/&#34;&gt;conditions against the JWT claims&lt;/a&gt;. The &lt;code&gt;AuthorizationPolicy&lt;/code&gt; applied is checking against the claims in the JWT payload&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;when:
- key: request.auth.claims&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;aud&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  values: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-jwt-test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
- key: request.auth.claims&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;scope&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
  values: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;write:database&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, we send a request with the scope &lt;code&gt;read:database&lt;/code&gt;, which will be rejected as the &lt;code&gt;AuthorizationPolicy&lt;/code&gt; is expecting a &lt;code&gt;write:database&lt;/code&gt; scope&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ jq -R &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;split(&amp;#34;.&amp;#34;) | .[0],.[1] | @base64d | fromjson&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $ACCESS_TOKEN&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RS256&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;typ&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kid&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;qv9xb5h9OYy-uJgVyDEyx&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://leonseng.au.auth0.com/&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xYvKrg4QHLA5bsna0Hg1MYiD3itPY1gC@clients&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aud&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;istio-jwt-test&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;: 1636376574,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;: 1636462974,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;azp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xYvKrg4QHLA5bsna0Hg1MYiD3itPY1gC&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scope&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;read:database&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gty&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;client-credentials&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
$ curl -s -X POST -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;$ACCESS_TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; httpbin/post
RBAC: access denied
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;additional-learnings&#34;&gt;Additional learnings&lt;/h1&gt;
&lt;p&gt;Here&amp;rsquo;s a list of things that were picked up during my tests that weren&amp;rsquo;t immediately intuitive:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Istio requires the port name in the &lt;code&gt;Service&lt;/code&gt; to be prefixed with the protocol as described &lt;a href=&#34;https://istio.io/latest/docs/ops/configuration/traffic-management/protocol-selection/&#34;&gt;here&lt;/a&gt;. Failing to adhere to the naming convention will break the authentication feature provided by the &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/request_authentication/&#34;&gt;RequestAuthentication&lt;/a&gt; resource. This can be caught by running &lt;code&gt;istioctl analyze&lt;/code&gt; in the application namespace, which reveals a &lt;a href=&#34;https://istio.io/latest/docs/reference/config/analysis/ist0118/&#34;&gt;PortNameIsNotUnderNamingConvention&lt;/a&gt; message:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ istioctl analyze
&amp;lt;snipped&amp;gt;
Info &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;IST0118&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Service httpbin.default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Port name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;port: 80, targetPort: 80&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; doesn&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t follow the naming convention of Istio port.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Defining a &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/request_authentication/&#34;&gt;RequestAuthentication&lt;/a&gt; alone does not stop requests without JWT, the requests just won&amp;rsquo;t have identities tied to them. Augment it with a &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/&#34;&gt;AuthorizationPolicy&lt;/a&gt; to enforce the presence of JWT.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;scope&lt;/code&gt; field in a JWT can contain multiple scopes in a space delimited format,
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;scope:&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;read:database&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;write:database&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;Fortunately, Istio recognizes that and separates the string into multiple scopes. This allows us to match individual scopes from the &lt;code&gt;scope&lt;/code&gt; field without having to do string manipulations.&lt;/li&gt;
&lt;li&gt;To assist with troubleshooting, set the log level for the &lt;code&gt;jwt&lt;/code&gt; and &lt;code&gt;rbac&lt;/code&gt; loggers to &lt;code&gt;debug&lt;/code&gt;, which will produce more logs on JWT validation and RBAC enforcement in the application sidecar proxy.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;istioctl proxy-config log &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;k get pods -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;httpbin -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[*].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; --level jwt:debug rbac:debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>Learning Istio | Securing Egress Traffic With mTLS</title>
      <link>/posts/learning-istio/securing-egress-traffic-with-mtls/</link>
      <pubDate>Tue, 12 Oct 2021 15:59:45 +1100</pubDate>
      
      <guid>/posts/learning-istio/securing-egress-traffic-with-mtls/</guid>
      <description>There are times when applications deployed in Kubernetes need to communicate with external services that requires mTLS authentication, where the applications have to present client certificates signed by a common root/intermediate CA when accessing the service. This can lead to unpleasant scenarios where
 application owners have to keep track of certificates for each of their applications applications written in different language/libraries have different ways of implementing mTLS connections  As an application owner, I would prefer to just deal with plain ol&#39; HTTP on port 80, and not have to modify the application to handle HTTPS or mTLS.</description>
      <content>&lt;p&gt;There are times when applications deployed in Kubernetes need to communicate with external services that requires mTLS authentication, where the applications have to present client certificates signed by a common root/intermediate CA when accessing the service. This can lead to unpleasant scenarios where&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;application owners have to keep track of certificates for each of their applications&lt;/li&gt;
&lt;li&gt;applications written in different language/libraries have different ways of implementing mTLS connections&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As an application owner, I would prefer to just deal with plain ol&#39; HTTP on port &lt;code&gt;80&lt;/code&gt;, and not have to modify the application to handle HTTPS or mTLS. Fortunately, Istio has some in-built capabilities to alleviate the pain points. In this post, I will be covering two scenarios:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#common-ca&#34;&gt;Istio cluster has the same root CA as the external service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#different-ca&#34;&gt;Istio cluster has a different root CA from the external service&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;common-ca&#34;&gt;Common CA&lt;/h1&gt;
&lt;p&gt;Many enterprises have root CAs they use to sign and verify all internal services. To ensure compliance, a good practice is to create an intermediate CA from the root CA, and plug that into the cluster when deploying Istio, as detailed &lt;a href=&#34;https://istio.io/latest/docs/tasks/security/cert-management/plugin-ca-cert/&#34;&gt;here&lt;/a&gt;. For such scenarios, Istio supports &lt;a href=&#34;https://istio.io/latest/docs/tasks/traffic-management/egress/egress-tls-origination/#tls-origination-for-egress-traffic&#34;&gt;TLS origination for egress traffic&lt;/a&gt;, and we can enable mTLS by setting the TLS mode in the &lt;code&gt;DestinationRule&lt;/code&gt; to &lt;code&gt;ISTIO_MUTUAL&lt;/code&gt; as documented &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/destination-rule/#ClientTLSSettings&#34;&gt;here&lt;/a&gt;. This tells the sidecar proxy to use a client certificate generated automatically by Istio (signed using the intermediate CA, hence the enterprise root CA) when calling the external service for mTLS authentication.&lt;/p&gt;
&lt;p&gt;To demonstrate this, I have deployed an external service &lt;code&gt;nginx-mtls.common-ca.local:8443&lt;/code&gt; using an NGINX container running on a remote host &lt;code&gt;10.1.1.4&lt;/code&gt;. mTLS authentication is enabled by configuring it to perform client SSL verification. The root CA specified for client SSL verification is also used to generated the server certificate for the NGINX server.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/leonseng/nginx-mtls&#34;&gt;leonseng/nginx-mtls&lt;/a&gt; for more information on the external service&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I deployed a &lt;code&gt;curl&lt;/code&gt; pod to mimic an application performing a &lt;code&gt;GET&lt;/code&gt; request to the external service:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: curl
  name: curl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: curl
  template:
    metadata:
      labels:
        app: curl
    spec:
      containers:
      - command:
        - tail
        args:
        - -f
        - /dev/null
        image: curlimages/curl
        name: curl
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As Istio&amp;rsquo;s &lt;code&gt;outboundTrafficPolicy&lt;/code&gt; is set to &lt;code&gt;REGISTRY_ONLY&lt;/code&gt;, a &lt;code&gt;ServiceEntry&lt;/code&gt; is required to allow any applications in the cluster to reach the external service &lt;code&gt;nginx-mtls.common-ca.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: nginx-mtls-common-ca
spec:
  hosts:
  - nginx-mtls.common-ca.local
  location: MESH_EXTERNAL
  ports:
  - number: 8443
    name: https
    protocol: HTTPS
  resolution: STATIC
  endpoints:
  - address: 10.1.1.4
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As it is, the application is expected to supply the client certificate for the mTLS connection. Attempting to call the external service without the client certificate would result in a failed request:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec curl-5fd94f6d69-526vq -c curl -- \
  curl -s --resolve nginx-mtls.common-ca.local:8443:10.1.1.4 \
  https://nginx-mtls.common-ca.local:8443
command terminated with exit code 35
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To enable mTLS, we need the following resources:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;code&gt;DestinationRule&lt;/code&gt; to initiate the mTLS connection on port &lt;code&gt;80&lt;/code&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: nginx-mtls-common-ca
spec:
  host: nginx-mtls.common-ca.local
  trafficPolicy:
    portLevelSettings:
    - port:
        number: 80
      tls:
        mode: ISTIO_MUTUAL
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;ServiceEntry&lt;/code&gt; with a new port entry for the HTTP port &lt;code&gt;80&lt;/code&gt;, and a &lt;code&gt;targetPort&lt;/code&gt; attribute set to the HTTPS port &lt;code&gt;8443&lt;/code&gt;:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: nginx-mtls-common-ca
spec:
  hosts:
  - nginx-mtls.common-ca.local
  location: MESH_EXTERNAL
  ports:
  - number: 80
    name: http-port
    protocol: HTTP
    targetPort: 8443
  - number: 8443
    name: https
    protocol: TLS
  resolution: STATIC
  endpoints:
  - address: 10.1.1.4
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The application will now be able to target the HTTP endpoint, leaving it to Istio to set up the mTLS connection on its behalf towards the external service:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec curl-5fd94f6d69-526vq -c curl -- \
  curl -s --resolve nginx-mtls.common-ca.local:80:10.1.1.4 \
  http://nginx-mtls.common-ca.local \
  | grep title
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;different-ca&#34;&gt;Different CA&lt;/h1&gt;
&lt;p&gt;There are cases where Istio is deployed with a CA certificate issued by a root CA different from the one used by the external service for client verification, or if Istio generated its own self-signed certificate. For mTLS to work in such scenarios, we would have to obtain client certificates signed by the enterprise&amp;rsquo;s root CA, and configure Istio to use these client certificates when setting up the mTLS the connections.&lt;/p&gt;
&lt;p&gt;Istio provides at least two ways of handling the client certificates:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#common-client-certificate-for-all-applications&#34;&gt;Common client certificate for all applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unique-client-certificate-for-each-application&#34;&gt;Unique client certificate for each application&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;common-client-certificate-for-all-applications&#34;&gt;Common client certificate for all applications&lt;/h2&gt;
&lt;p&gt;If the external service provider trusts the cluster, and thereby all applications hosted within the cluster, we would only need one client certificate and key pair for an egress gateway perform the mTLS connection on behalf of all applications within the cluster. This does require the deployment of an egress gateway (which is outside the scope of this post), and have all traffic to the external service routed via the egress gateway. Istio has a handy page on &lt;a href=&#34;https://istio.io/latest/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/#perform-mutual-tls-origination-with-an-egress-gateway&#34;&gt;Perform mutual TLS origination with an egress gateway&lt;/a&gt;, but there&amp;rsquo;s quite a bit to unpack there.&lt;/p&gt;
&lt;p&gt;For this example use case, I have deployed another external service &lt;code&gt;nginx-mtls.diff-ca.local:9443&lt;/code&gt; running on an NGINX container on the remote host &lt;code&gt;10.1.1.4&lt;/code&gt;. The certificates for the server and for client verification are signed with a root CA different from the one used to create the intermediate CA for Istio.&lt;/p&gt;
&lt;p&gt;We first need to handle the connection between the application and the egress gateway, by directing traffic to the external server &lt;code&gt;nginx-mtls.diff-ca.local&lt;/code&gt; via the egress gateway with:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;code&gt;Gateway&lt;/code&gt; on the egress gateway to listen for traffic to the external service (on port 443 because of the mTLS connection between the application and the egress gateway)
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-egressgateway
spec:
  selector:
    istio: egressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - nginx-mtls.diff-ca.local
    tls:
        mode: ISTIO_MUTUAL
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;VirtualService&lt;/code&gt; to direct traffic to the external service via the egress gateway
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: direct-nginx-mtls-through-egress-gateway
spec:
  hosts:
  - nginx-mtls.diff-ca.local
  gateways:
  - mesh
  http:
  - match:
    - gateways:
      - mesh
      port: 80
    route:
    - destination:
        host: istio-egressgateway.istio-system.svc.cluster.local
        subset: nginx-mtls
        port:
          number: 443
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;DestinationRule&lt;/code&gt; to perform mTLS origination from application to the egress gateway, whilst preserving the SNI string towards the external service &lt;code&gt;nginx-mtls.diff-ca.local&lt;/code&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: egressgateway-for-nginx-mtls
spec:
  host: istio-egressgateway.istio-system.svc.cluster.local
  subsets:
  - name: nginx-mtls
    trafficPolicy:
      portLevelSettings:
      - port:
          number: 443
        tls:
          mode: ISTIO_MUTUAL
          sni: nginx-mtls.diff-ca.local
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the second half of the connection, we need the egress gateway to route the traffic to the external service over an mTLS connection. First, we create a generic &lt;code&gt;Secret&lt;/code&gt; to store the enterprise root CA, client certificate and key:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that I&amp;rsquo;ve created the &lt;code&gt;Secret&lt;/code&gt; in the &lt;code&gt;istio-system&lt;/code&gt; because that&amp;rsquo;s where my egress gateway is deployed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl -n istio-system create secret generic nginx-mtls-external \
  --from-file=tls.key=client.key \
  --from-file=tls.crt=client.crt \
  --from-file=ca.crt=enterpriseRootCA.pem
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next, we define the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;code&gt;ServiceEntry&lt;/code&gt; for the external service to allow traffic to leave the cluster
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: nginx-mtls-diff-ca
spec:
  hosts:
  - nginx-mtls.diff-ca.local
  location: MESH_EXTERNAL
  ports:
  - number: 9443
    name: https
    protocol: TLS
  resolution: STATIC
  endpoints:
  - address: 10.1.1.4
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;VirtualService&lt;/code&gt; defined earlier to redirect traffic hitting the egress gateway to now leave the cluster towards the external service (note the new &lt;code&gt;HTTPMatchRequest&lt;/code&gt;)
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: direct-nginx-mtls-through-egress-gateway
spec:
  hosts:
  - nginx-mtls.diff-ca.local
  gateways:
  - istio-egressgateway
  - mesh
  http:
  - match:
    - gateways:
      - mesh
      port: 80
    route:
    - destination:
        host: istio-egressgateway.istio-system.svc.cluster.local
        subset: nginx-mtls
        port:
          number: 443
  - match:
    - gateways:
      - istio-egressgateway
      port: 443
    route:
    - destination:
        host: nginx-mtls.diff-ca.local
        port:
          number: 9443
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;DestinationRule&lt;/code&gt; for the external service, with the client TLS mode set to &lt;code&gt;MUTUAL&lt;/code&gt; for mTLS. The &lt;code&gt;Secret&lt;/code&gt; containing the certificates and key is also referenced here to provide Istio sidecars with right files for setting up the mTLS connection.
&lt;blockquote&gt;
&lt;p&gt;Note that I&amp;rsquo;ve defined the &lt;code&gt;DestinationRule&lt;/code&gt; in the same namespace as where the &lt;code&gt;Secret&lt;/code&gt; is defined in this example&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl -n istio-system apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: originate-tls-for-nginx-mtls
spec:
  host: nginx-mtls.diff-ca.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
    portLevelSettings:
    - port:
        number: 9443
      tls:
        mode: MUTUAL
        credentialName: nginx-mtls-external
        sni: nginx-mtls.diff-ca.local
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With all that in place, the application should now be able to access the external service that is expecting a client certificate signed with a different root CA from the cluster&amp;rsquo;s CA&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec curl-5fd94f6d69-526vq -c curl -- \
  curl -s --resolve nginx-mtls.diff-ca.local:80:10.1.1.4 \
  http://nginx-mtls.diff-ca.local \
  | grep title
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;unique-client-certificate-for-each-application&#34;&gt;Unique client certificate for each application&lt;/h2&gt;
&lt;p&gt;If there is a requirement for each application to have unique client certificates, or managing an egress gateway sounds like a chore, one can leave the task of managing client certificates to the application owners.&lt;/p&gt;
&lt;p&gt;First, the cluster admin has to define the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;code&gt;ServiceEntry&lt;/code&gt; for the external service to allow traffic to leave the cluster
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: nginx-mtls-diff-ca
spec:
  hosts:
  - nginx-mtls.diff-ca.local
  location: MESH_EXTERNAL
  ports:
  - number: 9443
    name: https
    protocol: HTTPS
  resolution: STATIC
  endpoints:
  - address: 10.1.1.4
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;VirtualService&lt;/code&gt; to route traffic destined for the external service, and converting the HTTP port (&lt;code&gt;80&lt;/code&gt;) to the HTTPS port (&lt;code&gt;9443&lt;/code&gt;). Note that this is just a port number change, the protocol is still HTTP at this point.
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: nginx-mtls-diff-ca
spec:
  hosts:
  - nginx-mtls.diff-ca.local
  http:
  - match:
    - port: 80
    route:
    - destination:
        host: nginx-mtls.diff-ca.local
        port:
          number: 9443
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;DestinationRule&lt;/code&gt; to perform mTLS connection, referencing the CA certificate, client certificate and key files in particular locations in the sidecar proxy. These files will be loaded into the sidecar proxy by the application owners in the following section.
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: nginx-mtls-diff-ca
spec:
  host: nginx-mtls.diff-ca.local
  trafficPolicy:
    portLevelSettings:
    - port:
        number: 9443
      tls:
        mode: MUTUAL
        clientCertificate: /etc/certs/tls.crt
        privateKey: /etc/certs/tls.key
        caCertificates: /etc/certs/ca.crt
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With the above set up, the application owners then have to provide the CA certificate, client certificate and key files for their applications:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a generic &lt;code&gt;Secret&lt;/code&gt; to store the enterprise root CA, client certificate and key for the mTLS connection towards&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create secret generic nginx-mtls-external \
  --from-file=tls.key=app-client.key \
  --from-file=tls.crt=app-client.crt \
  --from-file=ca.crt=enterpriseCA.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following annotations to the &lt;code&gt;Pod&lt;/code&gt; template in the &lt;code&gt;Deployment&lt;/code&gt; to load the certs and key from the &lt;code&gt;Secret&lt;/code&gt; into the pod&amp;rsquo;s sidecar proxy in the directory specified by the &lt;code&gt;DestinationRule&lt;/code&gt; from before (&lt;code&gt;/etc/certs/&lt;/code&gt; in this case)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sidecar.istio.io/userVolume: &#39;[{&amp;quot;name&amp;quot;:&amp;quot;client-certs&amp;quot;, &amp;quot;secret&amp;quot;:{&amp;quot;secretName&amp;quot;:&amp;quot;nginx-mtls-external&amp;quot;}}]&#39;
sidecar.istio.io/userVolumeMount: &#39;[{&amp;quot;name&amp;quot;:&amp;quot;client-certs&amp;quot;, &amp;quot;mountPath&amp;quot;:&amp;quot;/etc/certs&amp;quot;, &amp;quot;readonly&amp;quot;:true}]&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;Deployment&lt;/code&gt; manifest will look something like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: curl
  name: curl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: curl
  template:
    metadata:
      annotations:
        sidecar.istio.io/userVolume: &#39;[{&amp;quot;name&amp;quot;:&amp;quot;client-certs&amp;quot;, &amp;quot;secret&amp;quot;:{&amp;quot;secretName&amp;quot;:&amp;quot;nginx-mtls-external&amp;quot;}}]&#39;
        sidecar.istio.io/userVolumeMount: &#39;[{&amp;quot;name&amp;quot;:&amp;quot;client-certs&amp;quot;, &amp;quot;mountPath&amp;quot;:&amp;quot;/etc/certs&amp;quot;, &amp;quot;readonly&amp;quot;:true}]&#39;
      labels:
        app: curl
    spec:
      containers:
      - command:
        - tail
        args:
        - -f
        - /dev/null
        image: curlimages/curl
        name: curl
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can verify that the certificates and key are mounted correctly using &lt;code&gt;istioctl pc secrets&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ istioctl pc secrets curl-55b48d797c-6f5h6 | grep /etc/certs
file-cert:/etc/certs/tls.crt~/etc/certs/tls.key     Cert Chain     ACTIVE     true           344012585647005735528648296646953979292086906406     2022-09-27T11:16:30Z     2021-09-27T11:16:30Z
file-root:/etc/certs/ca.crt                         CA             ACTIVE     true           720903288241772125710852709688782830101643184205     2026-09-26T11:03:03Z     2021-09-27T11:03:03Z
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, the application should be able to access the external service via HTTP on port &lt;code&gt;80&lt;/code&gt;, and the sidecar proxy should initiate the mTLS connection on its behalf on the HTTPS port &lt;code&gt;9443&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec curl-55b48d797c-6f5h6 -c curl -- \
  curl -s --resolve nginx-mtls.diff-ca.local:80:10.1.1.4 \
  http://nginx-mtls.diff-ca.local \
  | grep title
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>Learning Istio | Why Isn&#39;t Service Entry Namespaced!?</title>
      <link>/posts/learning-istio/why-isnt-service-entry-namespaced/</link>
      <pubDate>Sat, 04 Sep 2021 23:36:07 +1000</pubDate>
      
      <guid>/posts/learning-istio/why-isnt-service-entry-namespaced/</guid>
      <description>I got a question on how we can restrict access to certain external endpoints on a per namespace basis. There was an idea to use Istio&amp;rsquo;s egress gateway to control access to external endpoints, though I&amp;rsquo;m not convinced that&amp;rsquo;s a valid use case for an egress gateway today. So I went off to do some investigation, and found some options:
 Specifying which namespaces can access certain hosts defined in the ServiceEntry Specifying which endpoints can be accessed from a namespace  But before that, a bit of back story of how we got here&amp;hellip;</description>
      <content>&lt;p&gt;I got a question on how we can restrict access to certain external endpoints on a per namespace basis. There was an idea to use Istio&amp;rsquo;s &lt;code&gt;egress gateway&lt;/code&gt; to control access to external endpoints, though I&amp;rsquo;m not convinced that&amp;rsquo;s a valid &lt;a href=&#34;https://istio.io/latest/docs/tasks/traffic-management/egress/egress-gateway/#use-case&#34;&gt;use case for an &lt;code&gt;egress gateway&lt;/code&gt;&lt;/a&gt; today. So I went off to do some investigation, and found some options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#exportto&#34;&gt;Specifying which namespaces can access certain hosts defined in the &lt;code&gt;ServiceEntry&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sidecar-resource&#34;&gt;Specifying which endpoints can be accessed from a namespace&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But before that, a bit of back story of how we got here&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;a-naive-beginning&#34;&gt;A naive beginning&lt;/h2&gt;
&lt;p&gt;First, I updated Istio &lt;code&gt;outboundTrafficPolicy&lt;/code&gt; to &lt;code&gt;REGISTRY_ONLY&lt;/code&gt; so that we need to EXPLICITLY allow connectivity to external endpoints&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;istioctl install --set profile=demo --set meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To test the access restriction, I deployed a &lt;code&gt;debian&lt;/code&gt; pod in the &lt;code&gt;default&lt;/code&gt; namespace&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create deployment debian --image debian --replicas=1 -- tail -f /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and tried running &lt;code&gt;apt update&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec -it debian-8484c5df49-9x7lt -- bash
Defaulting container name to debian.
Use &#39;kubectl describe pod/debian-8484c5df49-9x7lt -n default&#39; to see all of the containers in this pod.
root@debian-8484c5df49-9x7lt:/#
root@debian-8484c5df49-9x7lt:/# apt-get update
Err:1 http://security.debian.org/debian-security bullseye-security InRelease
  502  Bad Gateway [IP: 151.101.130.132 80]
Err:2 http://deb.debian.org/debian bullseye InRelease
  502  Bad Gateway [IP: 151.101.30.132 80]
Err:3 http://deb.debian.org/debian bullseye-updates InRelease
  502  Bad Gateway [IP: 151.101.30.132 80]
Reading package lists... Done
N: See apt-secure(8) manpage for repository creation and user configuration details.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
E: The repository &#39;http://security.debian.org/debian-security bullseye-security InRelease&#39; is not signed.
E: Failed to fetch http://security.debian.org/debian-security/dists/bullseye-security/InRelease  502  Bad Gateway [IP: 151.101.130.132 80]
E: Failed to fetch http://deb.debian.org/debian/dists/bullseye/InRelease  502  Bad Gateway [IP: 151.101.30.132 80]
E: The repository &#39;http://deb.debian.org/debian bullseye InRelease&#39; is not signed.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.
E: Failed to fetch http://deb.debian.org/debian/dists/bullseye-updates/InRelease  502  Bad Gateway [IP: 151.101.30.132 80]
E: The repository &#39;http://deb.debian.org/debian bullseye-updates InRelease&#39; is not signed.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.
root@debian-8484c5df49-9x7lt:/#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As expected the command fails when &lt;code&gt;apt update&lt;/code&gt; tries to reach external endpoints &lt;code&gt;security.debian.org&lt;/code&gt; and &lt;code&gt;deb.debian.org&lt;/code&gt;, due to the endpoints not being defined in the registry.&lt;/p&gt;
&lt;p&gt;I then created a &lt;code&gt;ServiceEntry&lt;/code&gt; matching the two hostnames&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: debian-org
spec:
  hosts:
  - security.debian.org
  - deb.debian.org
  location: MESH_EXTERNAL
  ports:
  - number: 80
    name: http
    protocol: HTTP
  resolution: DNS
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and re-ran &lt;code&gt;apt update&lt;/code&gt;. This time it ran successfully as expected.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec -it debian-8484c5df49-9x7lt -- bash
Defaulting container name to debian.
Use &#39;kubectl describe pod/debian-8484c5df49-9x7lt -n default&#39; to see all of the containers in this pod.
root@debian-8484c5df49-9x7lt:/# apt update
Hit:1 http://security.debian.org/debian-security bullseye-security InRelease
Get:2 http://deb.debian.org/debian bullseye InRelease [113 kB]
Get:3 http://deb.debian.org/debian bullseye-updates InRelease [36.8 kB]
Get:4 http://deb.debian.org/debian bullseye/main amd64 Packages [8178 kB]
Fetched 8327 kB in 3s (2812 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
All packages are up to date.
root@debian-8484c5df49-9x7lt:/#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, I thought this would be the end of the story. All I have to do is to only allow cluster admins the permissions for creating &lt;code&gt;ServiceEntry&lt;/code&gt; resources, and developers would have to engage cluster admins to get access to external resources!&lt;/p&gt;
&lt;h2 id=&#34;plot-twist&#34;&gt;Plot twist&lt;/h2&gt;
&lt;p&gt;But I figured this came to me too easily&amp;hellip; they should have figured it out without asking for help. So, I tried repeating the test from another namespace &lt;code&gt;newguy&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create ns newguy
kubectl label namespace newguy istio-injection=enabled
kubectl -n newguy create deployment debian --image debian --replicas=1 -- tail -f /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Lo and behold, when I run &lt;code&gt;apt update&lt;/code&gt; in this container, it worked&amp;hellip; when I thought it shouldn&amp;rsquo;t&amp;hellip;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl -n newguy exec -it debian-8484c5df49-dpf2h -- bash
Defaulting container name to debian.
Use &#39;kubectl describe pod/debian-8484c5df49-dpf2h -n newguy&#39; to see all of the containers in this pod.
root@debian-8484c5df49-dpf2h:/# apt update
Get:1 http://deb.debian.org/debian bullseye InRelease [113 kB]
Get:2 http://deb.debian.org/debian bullseye-updates InRelease [36.8 kB]
Get:3 http://deb.debian.org/debian bullseye/main amd64 Packages [8178 kB]
Get:4 http://security.debian.org/debian-security bullseye-security InRelease [44.1 kB]
Get:5 http://security.debian.org/debian-security bullseye-security/main amd64 Packages [29.4 kB]
Fetched 8401 kB in 3s (3267 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
All packages are up to date.
root@debian-8484c5df49-dpf2h:/#
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Turns out that by default, many of Istio&amp;rsquo;s resources are translated to configurations which are applied to the sidecar proxies in all namespaces. Here&amp;rsquo;s one from Istio&amp;rsquo;s &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/service-entry/&#34;&gt;ServiceEntry&lt;/a&gt; documentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &amp;lsquo;exportTo&amp;rsquo; field allows for control over the visibility of a service declaration to other namespaces in the mesh. By default, a service is exported to all namespaces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, that means by default, my &lt;code&gt;newguy:debian&lt;/code&gt; pod contains configuration to get to the &lt;code&gt;*.debian.org&lt;/code&gt; hosts from the &lt;code&gt;ServiceEntry&lt;/code&gt; definition in the default namespace. I want the opposite of that - I don&amp;rsquo;t want the &lt;code&gt;istio-proxy&lt;/code&gt; in the &lt;code&gt;newguy&lt;/code&gt; namespace to pick up configuration defined in other namespaces.&lt;/p&gt;
&lt;p&gt;Now that we&amp;rsquo;ve established our problem, let&amp;rsquo;s set out to explore the options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#exportto&#34;&gt;Specifying which namespaces can access certain hosts defined in the &lt;code&gt;ServiceEntry&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sidecar-resource&#34;&gt;Specifying which endpoints can be accessed from a namespace&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;exportto&#34;&gt;exportTo&lt;/h2&gt;
&lt;p&gt;The most direct way is to use the &lt;code&gt;exportTo&lt;/code&gt; attribute in &lt;code&gt;ServiceEntry&lt;/code&gt; to specify the namespaces in which pods are allowed to access the external endpoints. To achieve that, I updated the &lt;code&gt;ServiceEntry&lt;/code&gt; to only export to the namespace in which it&amp;rsquo;s defined, or just &lt;code&gt;&amp;quot;.&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: debian-org
spec:
  exportTo:
  - &amp;quot;.&amp;quot;
  hosts:
  - security.debian.org
  - deb.debian.org
  location: MESH_EXTERNAL
  ports:
  - number: 80
    name: http
    protocol: HTTP
  resolution: DNS
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The container in the &lt;code&gt;newguy&lt;/code&gt; namespace is no longer able to access the endpoints:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl -n newguy exec debian-8484c5df49-dpf2h -- apt update
Defaulted container &amp;quot;debian&amp;quot; out of: debian, istio-proxy, istio-init (init)

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Err:1 http://deb.debian.org/debian bullseye InRelease
  502  Bad Gateway [IP: 151.101.30.132 80]
Err:2 http://deb.debian.org/debian bullseye-updates InRelease
  502  Bad Gateway [IP: 151.101.30.132 80]
Err:3 http://security.debian.org/debian-security bullseye-security InRelease
  502  Bad Gateway [IP: 151.101.2.132 80]
Reading package lists...
E: The repository &#39;http://deb.debian.org/debian bullseye InRelease&#39; is no longer signed.
E: Failed to fetch http://deb.debian.org/debian/dists/bullseye/InRelease  502  Bad Gateway [IP: 151.101.30.132 80]
E: Failed to fetch http://deb.debian.org/debian/dists/bullseye-updates/InRelease  502  Bad Gateway [IP: 151.101.30.132 80]
E: The repository &#39;http://deb.debian.org/debian bullseye-updates InRelease&#39; is no longer signed.
E: Failed to fetch http://security.debian.org/debian-security/dists/bullseye-security/InRelease  502  Bad Gateway [IP: 151.101.2.132 80]
E: The repository &#39;http://security.debian.org/debian-security bullseye-security InRelease&#39; is no longer signed.
command terminated with exit code 100
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;sidecar-resource&#34;&gt;Sidecar resource&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;exportTo&lt;/code&gt; attribute presents a per &lt;code&gt;ServiceEntry&lt;/code&gt; way of controlling access. To achieve a per namespace way of access control, we can turn to the &lt;code&gt;Sidecar&lt;/code&gt;. No, not the &lt;code&gt;istio-proxy&lt;/code&gt; sidecars that come with pods. I&amp;rsquo;m talking about the &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/sidecar/&#34;&gt;Sidecar&lt;/a&gt; custom resource.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, Istio will program all sidecar proxies in the mesh with the necessary configuration required to reach every workload instance in the mesh, as well as accept traffic on all the ports associated with the workload. The Sidecar configuration provides a way to fine tune the set of ports, protocols that the proxy will accept when forwarding traffic to and from the workload. In addition, it is possible to restrict the set of services that the proxy can reach when forwarding outbound traffic from workload instances.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To demonstrate, I created the following &lt;code&gt;Sidecar&lt;/code&gt; definition in the &lt;code&gt;newguy&lt;/code&gt; namespace which only allows egress traffic only to other workloads in the same namespace as well as to services in the &lt;code&gt;istio-system&lt;/code&gt; namespace.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl -n newguy create -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: default
spec:
  egress:
  - hosts:
    - &amp;quot;./*&amp;quot;
    - &amp;quot;istio-system/*&amp;quot;
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When I try running &lt;code&gt;apt update&lt;/code&gt; in the &lt;code&gt;newguy&lt;/code&gt; namespace again:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl -n newguy exec debian-8484c5df49-dpf2h -- apt update
Defaulting container name to debian.
Use &#39;kubectl describe pod/debian-8484c5df49-dpf2h -n newguy&#39; to see all of the containers in this pod.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Err:1 http://security.debian.org/debian-security bullseye-security InRelease
  502  Bad Gateway [IP: 151.101.66.132 80]
Err:2 http://deb.debian.org/debian bullseye InRelease
  502  Bad Gateway [IP: 151.101.30.132 80]
Err:3 http://deb.debian.org/debian bullseye-updates InRelease
  502  Bad Gateway [IP: 151.101.30.132 80]
Reading package lists...
E: The repository &#39;http://security.debian.org/debian-security bullseye-security InRelease&#39; is no longer signed.
E: Failed to fetch http://security.debian.org/debian-security/dists/bullseye-security/InRelease  502  Bad Gateway [IP: 151.101.66.132 80]
E: Failed to fetch http://deb.debian.org/debian/dists/bullseye/InRelease  502  Bad Gateway [IP: 151.101.30.132 80]
E: The repository &#39;http://deb.debian.org/debian bullseye InRelease&#39; is no longer signed.
E: Failed to fetch http://deb.debian.org/debian/dists/bullseye-updates/InRelease  502  Bad Gateway [IP: 151.101.30.132 80]
E: The repository &#39;http://deb.debian.org/debian bullseye-updates InRelease&#39; is no longer signed.
command terminated with exit code 100
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It fails as expected! And when I add the two hostnames in the egress hosts list of the &lt;code&gt;Sidecar&lt;/code&gt; resource:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl -n newguy apply -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: default
spec:
  egress:
  - hosts:
    - &amp;quot;./*&amp;quot;
    - &amp;quot;istio-system/*&amp;quot;
    - &amp;quot;default/security.debian.org&amp;quot;
    - &amp;quot;default/deb.debian.org&amp;quot;
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;apt update&lt;/code&gt; now runs successfully!&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl -n newguy exec debian-8484c5df49-dpf2h -- apt update
Defaulting container name to debian.
Use &#39;kubectl describe pod/debian-8484c5df49-dpf2h -n newguy&#39; to see all of the containers in this pod.

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

Hit:1 http://security.debian.org/debian-security bullseye-security InRelease
Hit:2 http://deb.debian.org/debian bullseye InRelease
Hit:3 http://deb.debian.org/debian bullseye-updates InRelease
Reading package lists...
Building dependency tree...
Reading state information...
All packages are up to date.
$
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>Learning Istio | Accessing external TCP services using ServiceEntry</title>
      <link>/posts/learning-istio/accessing-external-tcp-services-using-serviceentry/</link>
      <pubDate>Mon, 16 Aug 2021 11:31:40 +1000</pubDate>
      
      <guid>/posts/learning-istio/accessing-external-tcp-services-using-serviceentry/</guid>
      <description>In this post, we will be testing Istio&amp;rsquo;s ServiceEntry by accessing a PostgreDB database hosted externally from the Kubernetes cluster.
Setup &amp;ldquo;External&amp;rdquo; PostgresDB service Since we are running the Kubernetes cluster locally in Docker containers using k3d, we can create an &amp;ldquo;external&amp;rdquo; service by running a PostgresDB Docker container on the same host and expose its ports to localhost.
Create a local PostgresDB container database using Docker
docker run --name postgres --restart always -e POSTGRES_PASSWORD=password -d -p 5432:5432 postgres Create a test database app_db</description>
      <content>&lt;p&gt;In this post, we will be testing Istio&amp;rsquo;s &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/service-entry/&#34;&gt;ServiceEntry&lt;/a&gt; by accessing a PostgreDB database hosted externally from the Kubernetes cluster.&lt;/p&gt;
&lt;h1 id=&#34;setup&#34;&gt;Setup&lt;/h1&gt;
&lt;h2 id=&#34;external-postgresdb-service&#34;&gt;&amp;ldquo;External&amp;rdquo; PostgresDB service&lt;/h2&gt;
&lt;p&gt;Since we are running the Kubernetes cluster locally in Docker containers using &lt;code&gt;k3d&lt;/code&gt;, we can create an &amp;ldquo;external&amp;rdquo; service by running a &lt;code&gt;PostgresDB&lt;/code&gt; Docker container on the same host and expose its ports to localhost.&lt;/p&gt;
&lt;p&gt;Create a local PostgresDB container database using Docker&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run --name postgres --restart always -e POSTGRES_PASSWORD=password -d -p 5432:5432 postgres
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create a test database &lt;code&gt;app_db&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker exec -u postgres -it postgres createdb app_db
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This service should be accessible within the cluster at &lt;code&gt;host.k3d.internal:5432&lt;/code&gt; (See &lt;a href=&#34;https://k3d.io/faq/faq/#how-to-access-services-like-a-database-running-on-my-docker-host-machine&#34;&gt;k3d FAQ&lt;/a&gt; for more information on &lt;code&gt;host.k3d.internal&lt;/code&gt;)&lt;/p&gt;
&lt;h2 id=&#34;postgres-client&#34;&gt;Postgres client&lt;/h2&gt;
&lt;p&gt;To test the externally hosted service, we will use &lt;a href=&#34;https://www.pgcli.com/&#34;&gt;pgcli&lt;/a&gt; to open a connection towards the database. I have published an image &lt;a href=&#34;https://hub.docker.com/r/leonseng/pgcli-docker&#34;&gt;leonseng/pgcli-docker&lt;/a&gt; on &lt;a href=&#34;https://hub.docker.com/&#34;&gt;Dockerhub&lt;/a&gt;, which contains the &lt;code&gt;pgcli&lt;/code&gt; binary for the purpose of this test.&lt;/p&gt;
&lt;p&gt;Create a deployment with the image&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create deployment pgcli --image leonseng/pgcli-docker:3.1.0 -- sleep 36000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Assuming the namespace has been labelled with &lt;code&gt;istio-injection=enabled&lt;/code&gt;, the pod should come up with 2 containers - one for &lt;code&gt;pgcli-docker&lt;/code&gt;, another for &lt;code&gt;istio-proxy&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl get pods pgcli-6d678b54fb-v8fpp
NAME                     READY   STATUS    RESTARTS   AGE
pgcli-6d678b54fb-v8fpp   2/2     Running   0          30m
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Try initial connection to the PostgresDB external to the Kubernetes cluster&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec &amp;lt;pgcli_pod&amp;gt; -it -- pgcli postgres://postgres:password@host.k3d.internal:5432/app_db
server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.

command terminated with exit code 1
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Connection fails as expected due to missing entry in the registry for the external service. Looking at logs of &lt;code&gt;istio-proxy&lt;/code&gt; confirms that traffic is being sent to the &lt;code&gt;BlackHoleCluster&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl logs &amp;lt;pgcli_pod&amp;gt; -c istio-proxy --tail 50 -f
[2021-08-16T00:47:49.898Z] &amp;quot;- - -&amp;quot; 0 UH - - &amp;quot;-&amp;quot; 0 0 0 - &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; BlackHoleCluster - 172.17.0.1:5432 10.42.0.10:35742 - -
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;service-entry&#34;&gt;Service Entry&lt;/h1&gt;
&lt;p&gt;Create a &lt;code&gt;ServiceEntry&lt;/code&gt; which registers the PostgresDB service at &lt;code&gt;host.k3d.internal:5432&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create -f - &amp;lt;&amp;lt;EOF
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: postgresdb
spec:
  hosts:
  - host.k3d.internal
  location: MESH_EXTERNAL
  ports:
  - number: 5432
    name: postgres
    protocol: TCP
  resolution: DNS
EOF

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once the &lt;code&gt;ServiceEntry&lt;/code&gt; has been created, the &lt;code&gt;pgcli&lt;/code&gt; client is now able to connect to the PostgresDB&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl exec &amp;lt;pgcli_pod&amp;gt; -it -- pgcli postgres://postgres:password@host.k3d.internal:5432/app_db
Server: PostgreSQL 13.3 (Debian 13.3-1.pgdg100+1)
Version: 3.1.0
Chat: https://gitter.im/dbcli/pgcli
Home: http://pgcli.com
postgres@host:app_db&amp;gt; quit
Goodbye!
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This successful connection is also logged on the &lt;code&gt;istio-proxy&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[2021-08-16T00:57:32.037Z] &amp;quot;- - -&amp;quot; 0 - - - &amp;quot;-&amp;quot; 452 880 30823 - &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; &amp;quot;-&amp;quot; &amp;quot;172.17.0.1:5432&amp;quot; outbound|5432||host.k3d.internal 10.42.0.10:40108 172.17.0.1:5432 10.42.0.10:40106 - -
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Digging deeper into the &lt;code&gt;istio-proxy&lt;/code&gt; configuration will show the relevant &lt;code&gt;Envoy&lt;/code&gt; objects created by this &lt;code&gt;ServiceEntry&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ istioctl proxy-config listeners pgcli-6d678b54fb-v8fpp | grep host.k3d.internal
0.0.0.0       5432  ALL                                                                      Cluster: outbound|5432||host.k3d.internal

$ istioctl proxy-config clusters pgcli-6d678b54fb-v8fpp | grep host.k3d.internal
host.k3d.internal                                       5432      -          outbound      STRICT_DNS

$ istioctl proxy-config endpoints pgcli-6d678b54fb-v8fpp | grep host.k3d.internal
172.17.0.1:5432                  HEALTHY     OK                outbound|5432||host.k3d.internal
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>Learning Istio | Ingress</title>
      <link>/posts/learning-istio/ingress/</link>
      <pubDate>Mon, 02 Aug 2021 16:25:55 +1000</pubDate>
      
      <guid>/posts/learning-istio/ingress/</guid>
      <description>In the previous post, we deployed the Bookinfo application on a k3s cluster with Istio enabled. In this post, we will explore the features on Istio Ingress.
Kubernetes Ingress Istio should handle Kubernetes Ingress resource just fine as documented here.
Here we create a Kubernetes Ingress to access the Bookinfo application. Note the additional annotation kubernetes.io/ingress.class: istio:
kubectl -n bookinfo apply -f - &amp;lt;&amp;lt;EOF apiVersion: networking.k8s.io/v1 kind: Ingress metadata: annotations: kubernetes.</description>
      <content>&lt;p&gt;In the previous &lt;a href=&#34;/posts/learning-istio/01-setup/&#34;&gt;post&lt;/a&gt;, we deployed the &lt;a href=&#34;https://istio.io/latest/docs/examples/bookinfo/#deploying-the-application&#34;&gt;Bookinfo&lt;/a&gt; application on a k3s cluster with Istio enabled. In this post, we will explore the features on Istio Ingress.&lt;/p&gt;
&lt;h1 id=&#34;kubernetes-ingress&#34;&gt;Kubernetes Ingress&lt;/h1&gt;
&lt;p&gt;Istio should handle &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/&#34;&gt;Kubernetes Ingress&lt;/a&gt; resource just fine as documented &lt;a href=&#34;https://istio.io/latest/docs/tasks/traffic-management/ingress/kubernetes-ingress/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here we create a Kubernetes Ingress to access the Bookinfo application. Note the additional annotation &lt;code&gt;kubernetes.io/ingress.class: istio&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl -n bookinfo apply -f - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: networking.k8s.io/v1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: Ingress
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  annotations:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    kubernetes.io/ingress.class: istio
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: productpage-k8s-ingress
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  rules:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - http:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      paths:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      - path: /productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        pathType: Exact
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        backend:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          service:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            name: productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              number: 9080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      - path: /static
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        pathType: Prefix
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        backend:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          service:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            name: productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              number: 9080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      - path: /login
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        pathType: Exact
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        backend:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          service:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            name: productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              number: 9080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      - path: /logout
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        pathType: Exact
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        backend:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          service:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            name: productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              number: 9080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      - path: /api/v1/products
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        pathType: Prefix
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        backend:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          service:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            name: productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              number: 9080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The application is now exposed through the Istio ingress gateway on port 80, which in turn is exposed on port 8080 via the k3d configuration. Verify that it is working by browsing to &lt;a href=&#34;http://localhost:8080/productpage&#34;&gt;http://localhost:8080/productpage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To verify that the route has been configured on the Istio ingress gateway, first get the name of the &lt;code&gt;route&lt;/code&gt; created by the Ingress:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ ISTIO_INGRESS_GW_POD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get pods -l app&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;istio-ingressgateway -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{.items[*].metadata.name}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
$ istioctl proxy-config routes -n istio-system $ISTIO_INGRESS_GW_POD
NAME        DOMAINS     MATCH                  VIRTUAL SERVICE
http.80     *           /productpage           -productpage-k8s-ingress-istio-autogenerated-k8s-ingress.bookinfo
            *           /healthz/ready*
            *           /stats/prometheus*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, we see &lt;code&gt;http.80&lt;/code&gt; is the route created for our ingress matching &lt;code&gt;/productpage&lt;/code&gt;. We can then print out the details of the route by name&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ istioctl proxy-config routes -n istio-system $ISTIO_INGRESS_GW_POD --name http.80 -o yaml
- name: http.80
  validateClusters: false
  virtualHosts:
  - domains:
    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;
    includeRequestAttemptCount: true
    name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*:80&amp;#39;&lt;/span&gt;
    routes:
    - decorator:
        operation: productpage.bookinfo.svc.cluster.local:9080/productpage
      match:
        caseSensitive: true
        path: /productpage
      metadata:
        filterMetadata:
          istio:
            config: /apis/networking.istio.io/v1alpha3/namespaces/bookinfo/virtual-service/-productpage-k8s-ingress-istio-autogenerated-k8s-ingress
      route:
        cluster: outbound|9080&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;productpage.bookinfo.svc.cluster.local
        maxGrpcTimeout: 0s
        retryPolicy:
          hostSelectionRetryMaxAttempts: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;
          numRetries: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
          retriableStatusCodes:
          - &lt;span style=&#34;color:#ae81ff&#34;&gt;503&lt;/span&gt;
          retryHostPredicate:
          - name: envoy.retry_host_predicates.previous_hosts
          retryOn: connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes
        timeout: 0s
&amp;lt;output truncated&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, you can go all out and get a config dump from the ingress gateway (which is basically Envoy) by exposing the Envoy admin port &lt;code&gt;15000&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl -n istio-system port-forward $ISTIO_INGRESS_GW_POD &lt;span style=&#34;color:#ae81ff&#34;&gt;15000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and calling the &lt;code&gt;config_dump&lt;/code&gt; API in a separate terminal&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;curl localhost:15000/config_dump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;istio-gateway-and-virtual-service&#34;&gt;Istio Gateway and Virtual Service&lt;/h1&gt;
&lt;p&gt;Istio offers the &lt;code&gt;Gateway&lt;/code&gt; and &lt;code&gt;VirtualService&lt;/code&gt; CRDs for better control of ingress traffic.&lt;/p&gt;
&lt;p&gt;We start by deploying the &lt;code&gt;Gateway&lt;/code&gt; and &lt;code&gt;VirtualService&lt;/code&gt; resources&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl -n bookinfo apply -f - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: networking.istio.io/v1alpha3
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: Gateway
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: bookinfo-gateway
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  selector:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    istio: ingressgateway # use istio default controller
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  servers:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      number: 80
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      name: http
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      protocol: HTTP
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    hosts:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;#34;*&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;---
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;apiVersion: networking.istio.io/v1alpha3
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;kind: VirtualService
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;metadata:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name: bookinfo
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;spec:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  hosts:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - &amp;#34;*&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  gateways:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - bookinfo-gateway
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  http:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  - match:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - uri:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        exact: /productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - uri:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        prefix: /static
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - uri:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        exact: /login
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - uri:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        exact: /logout
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - uri:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        prefix: /api/v1/products
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    route:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - destination:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        host: productpage
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        port:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          number: 9080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify that the appropriate routes are created:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ istioctl proxy-config routes -n istio-system $ISTIO_INGRESS_GW_POD
NAME        DOMAINS     MATCH                  VIRTUAL SERVICE
http.80     *           /productpage           -productpage-k8s-ingress-istio-autogenerated-k8s-ingress.bookinfo
http.80     *           /static/*              -productpage-k8s-ingress-istio-autogenerated-k8s-ingress.bookinfo
http.80     *           /login                 -productpage-k8s-ingress-istio-autogenerated-k8s-ingress.bookinfo
http.80     *           /logout                -productpage-k8s-ingress-istio-autogenerated-k8s-ingress.bookinfo
http.80     *           /api/v1/products/*     -productpage-k8s-ingress-istio-autogenerated-k8s-ingress.bookinfo
http.80     *           /productpage           bookinfo.bookinfo
http.80     *           /static*               bookinfo.bookinfo
http.80     *           /login                 bookinfo.bookinfo
http.80     *           /logout                bookinfo.bookinfo
http.80     *           /api/v1/products*      bookinfo.bookinfo
            *           /healthz/ready*
            *           /stats/prometheus*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that we now have 2 sets of routes, 1 from Kubernetes Ingress and another from the Istio VirtualService. According to Envoy&amp;rsquo;s &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/route_matching&#34;&gt;route matching&lt;/a&gt; rules, they are evaluated in order, so the routes introduced by the Ingress resource still has priority.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s verify this by changing the target port for /productpage in the &lt;code&gt;productpage-k8s-ingress&lt;/code&gt; Ingress to something else&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl -n bookinfo patch ingress productpage-k8s-ingress -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  &amp;#34;spec&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;rules&amp;#34;: [
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;http&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          &amp;#34;paths&amp;#34;: [
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              &amp;#34;path&amp;#34;: &amp;#34;/productpage&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              &amp;#34;pathType&amp;#34;: &amp;#34;Exact&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              &amp;#34;backend&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &amp;#34;service&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                  &amp;#34;name&amp;#34;: &amp;#34;productpage&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                  &amp;#34;port&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    &amp;#34;number&amp;#34;: 10080
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                  }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          ]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Attempting to browse to &lt;a href=&#34;http://localhost:8080/productpage&#34;&gt;http://localhost:8080/productpage&lt;/a&gt; will now fail as expected since the &lt;code&gt;productpage-k8s-ingress&lt;/code&gt; Ingress configuration is wrong.&lt;/p&gt;
&lt;p&gt;Now that we have observed this behaviour of Envoy route matching, we can remove the &lt;code&gt;productpage-k8s-ingress&lt;/code&gt; Ingress, and have Istio&amp;rsquo;s Gateway and VirtualService to take effect&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;kubectl -n bookinfo delete ingress productpage-k8s-ingress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href=&#34;http://localhost:8080/productpage&#34;&gt;productpage&lt;/a&gt; should now work again.&lt;/p&gt;
&lt;h1 id=&#34;learnings&#34;&gt;Learnings&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Istio can handle Kubernetes Ingress once the &lt;code&gt;kubernetes.io/ingress.class: istio&lt;/code&gt; annotation has been added&lt;/li&gt;
&lt;li&gt;Viewing the Ingress gateway routes&lt;/li&gt;
&lt;li&gt;Ingress gateway route matching behaviour&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Learning Istio | Setup</title>
      <link>/posts/learning-istio/setup/</link>
      <pubDate>Mon, 02 Aug 2021 14:20:35 +1000</pubDate>
      
      <guid>/posts/learning-istio/setup/</guid>
      <description>In this series, we will be testing out several features in Istio with a local Kubernetes (k3s) cluster.
Deploy k3s cluster First step is to deploy the k8s cluster with k3d - a wrapper to run k3s in docker. Start by creating a k3d config file:
# k3d-istio.yaml apiVersion: k3d.io/v1alpha2 kind: Simple name: istio servers: 1 agents: 2 ports: # for exposing Istio ingress on localhost - port: 8080:80 nodeFilters: - loadbalancer - port: 8443:443 nodeFilters: - loadbalancer options: k3s: extraServerArgs: - --no-deploy=traefik  # we will be using Istio ingress instead Deploy the cluster with k3d</description>
      <content>&lt;p&gt;In this series, we will be testing out several features in Istio with a local Kubernetes (k3s) cluster.&lt;/p&gt;
&lt;h1 id=&#34;deploy-k3s-cluster&#34;&gt;Deploy k3s cluster&lt;/h1&gt;
&lt;p&gt;First step is to deploy the k8s cluster with &lt;a href=&#34;https://k3d.io/&#34;&gt;k3d&lt;/a&gt; - a wrapper to run k3s in docker. Start by creating a k3d config file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# k3d-istio.yaml&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;k3d.io/v1alpha2&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Simple&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;istio&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;servers&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;agents&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
  &lt;span style=&#34;color:#75715e&#34;&gt;# for exposing Istio ingress on localhost&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;nodeFilters&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;loadbalancer&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8443&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;nodeFilters&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;loadbalancer&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;options&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;k3s&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;extraServerArgs&lt;/span&gt;:
      - --&lt;span style=&#34;color:#66d9ef&#34;&gt;no&lt;/span&gt;-&lt;span style=&#34;color:#ae81ff&#34;&gt;deploy=traefik &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# we will be using Istio ingress instead&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Deploy the cluster with k3d&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;k3d cluster create --config k3d-istio.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once the cluster has been deployed, configure &lt;code&gt;kubectl&lt;/code&gt; to use the newly created context &lt;code&gt;k3d-istio&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl config use-context k3d-istio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify cluster creation by running&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl cluster-info
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;deploy-sample-application&#34;&gt;Deploy sample application&lt;/h1&gt;
&lt;p&gt;Deploy the sample &lt;a href=&#34;https://istio.io/latest/docs/examples/bookinfo/#deploying-the-application&#34;&gt;Bookinfo&lt;/a&gt; application so that we can observe the difference Istio brings&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl create ns bookinfo
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.10/samples/bookinfo/platform/kube/bookinfo.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see some pods created in the namespace&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ kubectl get pods
NAME                              READY   STATUS    RESTARTS   AGE
details-v1-79f774bdb9-swd8j       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          42m
ratings-v1-b6994bb9-vgx86         1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          42m
productpage-v1-6b746f74dc-wkd2r   1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          42m
reviews-v1-545db77b95-vcps9       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          42m
reviews-v2-7bf8c9648f-4tscf       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          42m
reviews-v3-84779c7bbc-tgxx7       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          42m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To access the Bookinfo application, port forward the &lt;code&gt;productpage&lt;/code&gt; service to localhost:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl port-forward svc/productpage &lt;span style=&#34;color:#ae81ff&#34;&gt;9080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should now be able to see the product page by browsing to &lt;a href=&#34;http://localhost:9080/productpage&#34;&gt;http://localhost:9080/productpage&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;install-istio&#34;&gt;Install Istio&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This section is largely based on Istio&amp;rsquo;s &lt;a href=&#34;https://istio.io/latest/docs/setup/getting-started/&#34;&gt;quick start guide&lt;/a&gt; with some minor differences to how the application is accessed (due to k3s networking)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We will be using &lt;code&gt;istioctl&lt;/code&gt; to install Istio in the cluster. See &lt;a href=&#34;https://istio.io/latest/docs/setup/install/&#34;&gt;Istio Installation Guides&lt;/a&gt; for alternative installation methods.&lt;/p&gt;
&lt;p&gt;Follow the instructions &lt;a href=&#34;https://istio.io/latest/docs/setup/getting-started/#download&#34;&gt;here&lt;/a&gt; to install the &lt;code&gt;istioctl&lt;/code&gt; binary. Verify that &lt;code&gt;istioctl&lt;/code&gt; has been installed by running &lt;code&gt;istioctl version&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;istioctl version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, install Istio with the &lt;code&gt;demo&lt;/code&gt; profile in the cluster&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;istioctl install --set profile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;demo -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;demo&lt;/code&gt; profile comes with all the Istio core components, and enables high levels of tracing and access logging. See &lt;a href=&#34;https://istio.io/latest/docs/setup/additional-setup/config-profiles/&#34;&gt;Istio Installation Configuration Profiles&lt;/a&gt; for more information on all supported configuration profiles.&lt;/p&gt;
&lt;p&gt;After a while, you should be able to see all Istio core components deployed in the &lt;code&gt;istio-system&lt;/code&gt; namespace&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ kubectl -n istio-system get all
NAME                                       READY   STATUS    RESTARTS   AGE
pod/istiod-568d797f55-j2z9p                1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          15m
pod/svclb-istio-ingressgateway-nvbs8       5/5     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          14m
pod/svclb-istio-ingressgateway-2r9xx       5/5     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          14m
pod/svclb-istio-ingressgateway-c62h4       5/5     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          14m
pod/istio-egressgateway-5547fcc8fc-cqnzs   1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          14m
pod/istio-ingressgateway-8f568d595-q4g96   1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          14m

NAME                           TYPE           CLUSTER-IP      EXTERNAL-IP                        PORT&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;S&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                                                      AGE
service/istiod                 ClusterIP      10.43.189.242   &amp;lt;none&amp;gt;                             15010/TCP,15012/TCP,443/TCP,15014/TCP                                        15m
service/istio-egressgateway    ClusterIP      10.43.162.21    &amp;lt;none&amp;gt;                             80/TCP,443/TCP
                                                      14m
service/istio-ingressgateway   LoadBalancer   10.43.59.75     172.22.0.2,172.22.0.3,172.22.0.4   15021:31379/TCP,80:30381/TCP,443:32247/TCP,31400:31774/TCP,15443:32131/TCP   14m

NAME                                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
daemonset.apps/svclb-istio-ingressgateway   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;       &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;           &amp;lt;none&amp;gt;          14m

NAME                                   READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/istiod                 1/1     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;           15m
deployment.apps/istio-egressgateway    1/1     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;           14m
deployment.apps/istio-ingressgateway   1/1     &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;            &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;           14m

NAME                                             DESIRED   CURRENT   READY   AGE
replicaset.apps/istiod-568d797f55                &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       15m
replicaset.apps/istio-egressgateway-5547fcc8fc   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       14m
replicaset.apps/istio-ingressgateway-8f568d595   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       14m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;enabling-istio-sidecar-injection&#34;&gt;Enabling Istio sidecar injection&lt;/h1&gt;
&lt;p&gt;Now that we have everything set up, let&amp;rsquo;s begin by enabling Istio in our application namespace &lt;code&gt;default&lt;/code&gt; by adding the label &lt;code&gt;istio-injection=enabled&lt;/code&gt; to the namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl label namespace default istio-injection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point, there should be no changes to the bookinfo application (note the container count is still &lt;code&gt;1/1&lt;/code&gt; for all pods):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ kubectl get pods
NAME                              READY   STATUS    RESTARTS   AGE
details-v1-79f774bdb9-swd8j       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          56m
ratings-v1-b6994bb9-vgx86         1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          56m
productpage-v1-6b746f74dc-wkd2r   1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          56m
reviews-v1-545db77b95-vcps9       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          56m
reviews-v2-7bf8c9648f-4tscf       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          56m
reviews-v3-84779c7bbc-tgxx7       1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          56m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To get the sidecar injected, we need to get the pods redeployed by deleting the existing ones with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl get pods --no-headers | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; | xargs kubectl delete pod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The pods should be redeployed with 2 containers in each of them&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ kubectl get pods
NAME                              READY   STATUS    RESTARTS   AGE
reviews-v1-545db77b95-5c5z4       2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          91s
ratings-v1-b6994bb9-v2mc4         2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          91s
productpage-v1-6b746f74dc-wjkr5   2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          91s
details-v1-79f774bdb9-fm7jd       2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          91s
reviews-v2-7bf8c9648f-b9mrh       2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          91s
reviews-v3-84779c7bbc-lvrwv       2/2     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          91s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;with the new container being the Istio sidecar proxy, as demonstrated in the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ kubectl get pods productpage-v1-6b746f74dc-wjkr5 -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{range .spec.containers[*]}{.image}{&amp;#34;\n&amp;#34;}{end}&amp;#39;&lt;/span&gt;
docker.io/istio/examples-bookinfo-productpage-v1:1.16.2
docker.io/istio/proxyv2:1.10.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;security-hardening&#34;&gt;Security Hardening&lt;/h1&gt;
&lt;h2 id=&#34;mutual-tls&#34;&gt;Mutual TLS&lt;/h2&gt;
&lt;p&gt;By default, Istio configures the destination workloads using &lt;code&gt;PERMISSIVE&lt;/code&gt; mode, where a service can accept both plain text and mutual TLS traffic. To ensure all our cluster traffic is encrypted, we will change this to &lt;code&gt;STRICT&lt;/code&gt; mode.&lt;/p&gt;
&lt;p&gt;There are two spots to enforce this&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;By namespace&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl apply -n &amp;lt;namespace&amp;gt; -f - &amp;lt;&amp;lt;EOF
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: &amp;quot;default&amp;quot;
spec:
  mtls:
    mode: STRICT
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Globally - note the resource is applied in the &lt;code&gt;istio-system&lt;/code&gt; namespace.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl apply -n istio-system -f - &amp;lt;&amp;lt;EOF
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: &amp;quot;default&amp;quot;
spec:
  mtls:
    mode: STRICT
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;outbound-traffic-policy&#34;&gt;Outbound Traffic Policy&lt;/h2&gt;
&lt;p&gt;To ensure we have better control of traffic exiting the cluster to reach external services, we will be configuring the Istio &lt;code&gt;meshConfig.outboundTrafficPolicy.mode&lt;/code&gt; option to &lt;code&gt;REGISTRY_ONLY&lt;/code&gt;. This means that pods/sidecars in the cluster are only able to reach external services if they are first defined in Istio&amp;rsquo;s internal service registry (via &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/service-entry/&#34;&gt;ServiceEntry&lt;/a&gt; definitions).&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;istioctl&lt;/code&gt; to enforce the policy&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;istioctl install --set profile=demo -y --set meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Verify the configuration is applied correctly&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl get istiooperator installed-state -n istio-system -o jsonpath=&#39;{.spec.meshConfig.outboundTrafficPolicy.mode}&#39;
REGISTRY_ONLY
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h1 id=&#34;next-steps&#34;&gt;Next steps&lt;/h1&gt;
&lt;p&gt;Now that we have a Kubernetes cluster with Istio installed, and a sample application with Istio sidecar injected, we should be ready to test out some Istio features in future articles.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Istio | The role of Istio Gateway port definition</title>
      <link>/posts/istio-ingressgateay-port-relationship/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/istio-ingressgateay-port-relationship/</guid>
      <description>Dont set wrong port in Gateway.</description>
      <content>&lt;p&gt;The port and protocol in the Gateway resource define the listener port and protocol in ingressgateway (envoy).&lt;/p&gt;
&lt;p&gt;However, the port in Gateway can be set to the port or targetPort of the ingressgateway svc, and finally the targetPort is used in envoy.&lt;/p&gt;
&lt;p&gt;For example below, the port is defined as 443 in Gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Gateway&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;istio-bookinfo&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bookinfo-gateway&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;selector&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;istio&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ingressgateway&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# use istio default controller&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;servers&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;number&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;  
      &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;HTTP &lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;hosts&lt;/span&gt;:
    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;number&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#####use for assembling the route name that under the listener&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#####use for assembling the route name that under the listener&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;HTTPS&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#####use for assembling the route name that under the listener&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;SIMPLE&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;serverCertificate&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/istio/ingressgateway-certs/tls.crt&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;privateKey&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/etc/istio/ingressgateway-certs/tls.key&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;hosts&lt;/span&gt;:
    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;While, when you check the envoy configurations, the listener port actually is 8443&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@k8s-master-v1-16 networking&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# istioctl proxy-config listener istio-ingressgateway-7b869dcfb5-lfqz9.istio-system --port 8443 -o json&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0_8443&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socketAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;portValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8443&lt;/span&gt; 《《《《《8443！！
            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filterChains&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filters&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;envoy.http_connection_manager&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;typedConfig&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outbound_0.0.0.0_8443&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rds&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;configSource&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ads&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
                                &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
                                &lt;span style=&#34;color:#75715e&#34;&gt;###The route name is assembled by protocol + port number + portname, Note here: use 443,not 8443&lt;/span&gt;
                                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;routeConfigName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https.443.https.bookinfo-gateway.istio-bookinfo&amp;#34;&lt;/span&gt;
                            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is because the ingressgateway&amp;rsquo;s 443 svc port is corresponding to targetPort 8443:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt; - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;nodePort&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;30975&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;TCP&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;targetPort&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8443&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the port is defined as 8443 in the gateway, the result is same, will generate 8443 listener in envoy.&lt;/p&gt;
&lt;p&gt;When there is only one gateway definition, it is ok to use port or the corresponding targetport of the ingressgateway, both will get the same listener port in evnoy lastly. But please be noted, if there are multiple gateway definitions and set same protocol, then the port in the gateways must be same. Otherwise, the listener will only associate the routeConfigName generated by the gateway that created afterwards, and the associated route will not contain the virtualservice logic that related to the first created gateway.&lt;/p&gt;
&lt;p&gt;For example, configure HTTP:8080 in the gateway in the istio-bookinfo namespace (the svc 80 of ingressgateway corresponds to the 8080 of the pod):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;v1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;items&lt;/span&gt;:
 
  &lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;selector&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;istio&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ingressgateway&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;servers&lt;/span&gt;:
    - &lt;span style=&#34;color:#f92672&#34;&gt;hosts&lt;/span&gt;:
      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;:
        &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;number&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;HTTP&lt;/span&gt;
    - &lt;span style=&#34;color:#f92672&#34;&gt;hosts&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;istiobookinfo.lab.f5se.io&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;port&lt;/span&gt;:
        &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;number&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;protocol&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;HTTPS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The gateway in the httpbin namespace configures HTTP：80，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@k8s-master-v1-16 httpbin&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# kubectl get gateways.networking.istio.io -n httpbin -o yaml&lt;/span&gt;
apiVersion: v1
items:
 
  spec:
    selector:
      istio: ingressgateway
    servers:
    - hosts:
      - httpbin.lab.f5se.io
      port:
        name: http-httpbin
        number: &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
        protocol: HTTP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This leads to the fact that the envoy listener is actually actually associated with the later created http.80 route:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@k8s-master-v1-16 ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# istioctl proxy-config listener istio-ingressgateway-7b869dcfb5-gh2vr.istio-system --port 8080 -o json&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0_8080&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socketAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;portValue&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filterChains&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filters&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;envoy.http_connection_manager&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;typedConfig&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outbound_0.0.0.0_8080&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rds&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;configSource&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ads&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
                                &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
                                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;routeConfigName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http.80&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Therefore, in these multi gateways configuration, which ultimately shares the listener port, the port number and protocol name need to be the same (BEST practice is using the port number that envoy actually listens to), but the port must be named differently (if the port name is the same, envoy will show the conflicting configuration logs):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;2020-07-10T09:56:26.192152Z	warning	envoy config	&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;external/envoy/source/common/config/grpc_subscription_impl.cc:101&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; gRPC config &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; type.googleapis.com/envoy.api.v2.Listener rejected: 
Error adding/updating listener&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 0.0.0.0_8080: duplicate listener 0.0.0.0_8080 found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Gateways with the same protocol and the same port, no matter whether they are in the same namespace, can only share one listener in envoy, so they will also share same route. If you accidentally configure the same virtualservice under different namespaces at this time, it will cause envoy to generate two identical match conditions in the same route (and the associated cluster is different namespace suffix, This resulting in abnormal access)&lt;/p&gt;
&lt;p&gt;Check more istio practice detail at my tech blog &lt;a href=&#34;https://imesh.club&#34;&gt;https://imesh.club&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Istio | Sidecar iptables and traffic steering detail</title>
      <link>/posts/istio-traffic-control-deepdive/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/istio-traffic-control-deepdive/</guid>
      <description>How istio manipulates traffic.</description>
      <content>&lt;h2 id=&#34;istio-injected-iptables&#34;&gt;Istio injected iptables&lt;/h2&gt;
&lt;p&gt;Istio implements the hijacking and processing of traffic by injecting the init container and envoy proxy container into the business pod. After the init container runs, the following NAT table rules for iptables will be generated in the corresponding linux namespace&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;amp;#91;root@k8s-node1-v1-16 ~]# iptables -t nat -L -v
Chain PREROUTING (policy ACCEPT 192K packets, 12M bytes)
 pkts bytes target     prot opt in     out     source               destination
 192K   12M ISTIO_INBOUND  tcp  --  any    any     anywhere             anywhere

Chain INPUT (policy ACCEPT 192K packets, 12M bytes)
 pkts bytes target     prot opt in     out     source               destination

Chain OUTPUT (policy ACCEPT 40673 packets, 3694K bytes)
 pkts bytes target     prot opt in     out     source               destination
 8917  535K ISTIO_OUTPUT  tcp  --  any    any     anywhere             anywhere

Chain POSTROUTING (policy ACCEPT 40673 packets, 3694K bytes)
 pkts bytes target     prot opt in     out     source               destination

Chain ISTIO_INBOUND (1 references)
 pkts bytes target     prot opt in     out     source               destination
    0     0 RETURN     tcp  --  any    any     anywhere             anywhere             tcp dpt:ssh
  356 21360 RETURN     tcp  --  any    any     anywhere             anywhere             tcp dpt:15090
 192K   11M RETURN     tcp  --  any    any     anywhere             anywhere             tcp dpt:15021
    0     0 RETURN     tcp  --  any    any     anywhere             anywhere             tcp dpt:15020
   34  2040 ISTIO_IN_REDIRECT  tcp  --  any    any     anywhere             anywhere

Chain ISTIO_IN_REDIRECT (3 references)
 pkts bytes target     prot opt in     out     source               destination
   34  2040 REDIRECT   tcp  --  any    any     anywhere             anywhere             redir ports 15006

Chain ISTIO_OUTPUT (1 references)
 pkts bytes target     prot opt in     out     source               destination
    0     0 RETURN     all  --  any    lo      127.0.0.6            anywhere    
    0     0 ISTIO_IN_REDIRECT  all  --  any    lo      anywhere            !localhost            owner UID match 1337
    0     0 RETURN     all  --  any    lo      anywhere             anywhere             ! owner UID match 1337
 8917  535K RETURN     all  --  any    any     anywhere             anywhere             owner UID match 1337
    0     0 ISTIO_IN_REDIRECT  all  --  any    lo      anywhere            !localhost            owner GID match 1337
    0     0 RETURN     all  --  any    lo      anywhere             anywhere             ! owner GID match 1337
    0     0 RETURN     all  --  any    any     anywhere             anywhere             owner GID match 1337
    0     0 RETURN     all  --  any    any     anywhere             localhost
    0     0 ISTIO_REDIRECT  all  --  any    any     anywhere             anywhere

Chain ISTIO_REDIRECT (1 references)
 pkts bytes target     prot opt in     out     source               destination
    0     0 REDIRECT   tcp  --  any    any     anywhere             anywhere             redir ports 15001
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;outbound-flow-control&#34;&gt;Outbound flow control&lt;/h2&gt;
&lt;p&gt;When the business container sends the request to the outside, such as productpage to reviews: 9080 port access, this connection will be redirected by iptables to port 127.0.0.1:115001, and then processed by envoy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;REDIRECT
This target is only valid in the nat table, in the PREROUTING and OUTPUT chains, and user-defined chains which are only called from those chains. It redirects the packet to the machine itself by changing the destination IP to the primary address of the incoming interface (locally-generated packets are mapped to the localhost address, 127.0.0.1 for IPv4 and ::1 for IPv6).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ipset.netfilter.org/iptables-extensions.man.html#lbDK&#34;&gt;https://ipset.netfilter.org/iptables-extensions.man.html#lbDK&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The virtualOutbound in envoy will be hit. This is a special listener. It contains the Original Destination listener filter. Note &amp;ldquo;useOriginalDst&amp;rdquo;: truethat after such configuration in the following configuration , envoy will re-find the matching listener in the configuration. If found, press the hit. The listener performs follow-up processing. If it cannot find it, it sends the request to the cluster in this listener. Here is a passthrough cluster. This cluster will forward the packet directly to the fourth layer.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --port 15001 -o json
&amp;amp;#91;
    {
        &amp;quot;name&amp;quot;: &amp;quot;virtualOutbound&amp;quot;,
        &amp;quot;address&amp;quot;: {
            &amp;quot;socketAddress&amp;quot;: {
                &amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                &amp;quot;portValue&amp;quot;: 15001
            }
        },
        &amp;quot;filterChains&amp;quot;: &amp;amp;#91;
            {
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;config&amp;quot;: {
                                    &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                    &amp;quot;root_id&amp;quot;: &amp;quot;stats_outbound&amp;quot;,
                                    &amp;quot;vm_config&amp;quot;: {
                                        &amp;quot;code&amp;quot;: {
                                            &amp;quot;local&amp;quot;: {
                                                &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                            }
                                        },
                                        &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                        &amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_outbound&amp;quot;
                                    }
                                }
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;PassthroughCluster&amp;quot;,
                            &amp;quot;cluster&amp;quot;: &amp;quot;PassthroughCluster&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ]
                        }
                    }
                ],
                &amp;quot;name&amp;quot;: &amp;quot;virtualOutbound-catchall-tcp&amp;quot;
            }
        ],
        &amp;quot;useOriginalDst&amp;quot;: true,
        &amp;quot;trafficDirection&amp;quot;: &amp;quot;OUTBOUND&amp;quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above listener will hand over the connection to the listener that matches the original destination IP and port. In the bookinfo example, it will be handed over to the 9080 listener. There is a question to consider here. From the perspective of envoy, the destination port of this link is already 15001, why can it match the following port 0.0.0.0:9080. This is because the NAT is done in the system kernel when iptables is redirected. The system kernel has this converted storage. Envoy obtains the real destination port through getsockopt() , so that it can correctly match the business listener.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;amp;#91;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --port 9080 -o json
&amp;amp;#91;
    {
        &amp;quot;name&amp;quot;: &amp;quot;0.0.0.0_9080&amp;quot;,
        &amp;quot;address&amp;quot;: {
            &amp;quot;socketAddress&amp;quot;: {
                &amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                &amp;quot;portValue&amp;quot;: 9080
            }
        },
        &amp;quot;filterChains&amp;quot;: &amp;amp;#91;
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
                        &amp;quot;http/1.0&amp;quot;,
                        &amp;quot;http/1.1&amp;quot;,
                        &amp;quot;h2c&amp;quot;
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;outbound_0.0.0.0_9080&amp;quot;,
                            &amp;quot;rds&amp;quot;: {
                                &amp;quot;configSource&amp;quot;: {
                                    &amp;quot;ads&amp;quot;: {}
                                },
                                &amp;quot;routeConfigName&amp;quot;: &amp;quot;9080&amp;quot;
                            },
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;amp;#91;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo
ADDRESS            PORT      TYPE
10.102.252.88      15012     TCP
10.96.122.225      31400     TCP
10.96.0.10         53        TCP
10.110.88.185      15443     TCP
10.96.122.225      15443     TCP
10.110.88.185      443       TCP
10.102.252.88      443       TCP
10.106.109.172     9001      TCP
10.96.0.1          443       TCP
10.96.122.225      443       TCP
10.106.109.172     9000      TCP
10.105.130.171     14267     HTTP+TCP
10.96.81.27        5601      HTTP+TCP
0.0.0.0            15014     HTTP+TCP
10.105.130.171     14250     HTTP+TCP
0.0.0.0            20001     HTTP+TCP
0.0.0.0            9411      HTTP+TCP
10.111.37.34       9090      HTTP+TCP
10.105.145.36      80        HTTP+TCP
10.105.130.171     14268     HTTP+TCP
10.96.0.10         9153      HTTP+TCP
10.110.244.188     80        HTTP+TCP
10.102.252.88      853       HTTP+TCP
10.99.139.251      16686     HTTP+TCP
0.0.0.0            12345     HTTP+TCP
10.103.155.149     80        HTTP+TCP
0.0.0.0            8000      HTTP+TCP
0.0.0.0            15010     HTTP+TCP
10.96.122.225      15020     HTTP+TCP
0.0.0.0            9090      HTTP+TCP
10.107.150.251     80        HTTP+TCP
0.0.0.0            14250     HTTP+TCP
0.0.0.0            80        HTTP+TCP
0.0.0.0            3000      HTTP+TCP
10.110.28.96       8181      HTTP+TCP
10.102.69.143      9200      HTTP+TCP
0.0.0.0            9080      HTTP+TCP 《《《《《《《《《《《《
0.0.0.0            15001     TCP 《《《《《《《《《《《《
0.0.0.0            15006     HTTP+TCP
0.0.0.0            15090     HTTP
0.0.0.0            15021     HTTP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Related passthrough cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@k8s-master-v1-16 ~]# istioctl proxy-config cluster productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --fqdn PassthroughCluster -o json
&amp;amp;#91;
。。。。忽略。。。
    {
        &amp;quot;name&amp;quot;: &amp;quot;PassthroughCluster&amp;quot;,
        &amp;quot;type&amp;quot;: &amp;quot;ORIGINAL_DST&amp;quot;,
        &amp;quot;connectTimeout&amp;quot;: &amp;quot;10s&amp;quot;,
        &amp;quot;lbPolicy&amp;quot;: &amp;quot;CLUSTER_PROVIDED&amp;quot;,
        &amp;quot;circuitBreakers&amp;quot;: {
            &amp;quot;thresholds&amp;quot;: &amp;amp;#91;
                {
                    &amp;quot;maxConnections&amp;quot;: 4294967295,
                    &amp;quot;maxPendingRequests&amp;quot;: 4294967295,
                    &amp;quot;maxRequests&amp;quot;: 4294967295,
                    &amp;quot;maxRetries&amp;quot;: 4294967295
                }
            ]
        },
        &amp;quot;filters&amp;quot;: &amp;amp;#91;
            {
                &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                &amp;quot;typedConfig&amp;quot;: {
                    &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                    &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                    &amp;quot;value&amp;quot;: {
                        &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                    }
                }
            }
        ]
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;inbound-flow-control&#34;&gt;Inbound flow control&lt;/h2&gt;
&lt;p&gt;When it is an inbound request, the destination address of the packet is the IP of the pod, and the destination port is the real port of the business (9080, non-svc mapping port). Since the link destination port of iptables is changed to 15006, it will Hit virtual inbound listener (0.0.0.0:15006), this listener has a series of filterchain, and the virtualoutbound listener configuration method is different, virtualinbound contains a series of actual service filters for specific ports, the connection will find specific in these fitlers Business matching. So how does it match the real 9080 business? For example, the following output:
addressPrefix can be matched. If the pod actually has multiple ports, only addressPrefix does not match. It also needs to match the application layer protocol, but the DestinationPort in the Match condition is not matched . In fact, it is similar to Virtualoutbound. The filter of the original destination listener is also used, so envoy will obtain the real destination port and IP from the kernel. This configuration method is different from the virtual outbound &amp;ldquo;useOriginalDst&amp;rdquo;: true configuration method, because this is an updated configuration method.&amp;quot; useOriginalDst&amp;quot;: true This configuration is about to be abandoned.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;listenerFilters&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;envoy.listener.original_dst&amp;quot;, &amp;quot;typedConfig&amp;quot;: { &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.original_dst.v2.OriginalDst&amp;quot; } },&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(According to &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener/listener_components.proto&#34;&gt;https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener/listener_components.proto&lt;/a&gt;, the  filtermatch condition is that all must match)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;destinationPort&amp;quot;: 9080,
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.138&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 32
                        }
                    ],
### 根据https://istio.io/latest/zh/docs/ops/deployment/requirements/ , 
### 同一个业务端口是不能被两个用不同协议的svc来发布的，因此这帮助避免了同端口同协议的match在整个配置文件里的出现。
                    &amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
                        &amp;quot;istio&amp;quot;,
                        &amp;quot;istio-http/1.0&amp;quot;,
                        &amp;quot;istio-http/1.1&amp;quot;,
                        &amp;quot;istio-h2&amp;quot;
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;inbound_10.244.2.138_9080&amp;quot;,
                            &amp;quot;routeConfig&amp;quot;: {
                                &amp;quot;name&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
                                &amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
                                    {
                                        &amp;quot;name&amp;quot;: &amp;quot;inbound|http|9080&amp;quot;,
                                        &amp;quot;domains&amp;quot;: &amp;amp;#91;
                                            &amp;quot;*&amp;quot;
                                        ],
                                        &amp;quot;routes&amp;quot;: &amp;amp;#91;
                                            {
                                                &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                                &amp;quot;match&amp;quot;: {
                                                    &amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
                                                },
                                                &amp;quot;route&amp;quot;: {
                                                    &amp;quot;cluster&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
                                                    &amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
                                                    &amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
                                                },
                                                &amp;quot;decorator&amp;quot;: {
                                                    &amp;quot;operation&amp;quot;: &amp;quot;productpage.istio-bookinfo.svc.cluster.local:9080/*&amp;quot;
                                                }
                                            }
                                        ]
                                    }
                                ],
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;last&#34;&gt;Last&lt;/h2&gt;
&lt;p&gt;Attach the actual configuration of 15006&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;amp;#91;root@k8s-master-v1-16 ~]# istioctl proxy-config listener productpage-v1-7f4cc988c6-qxqjs.istio-bookinfo --port 15006 -o json
&amp;amp;#91;
    {
        &amp;quot;name&amp;quot;: &amp;quot;virtualInbound&amp;quot;,
        &amp;quot;address&amp;quot;: {
            &amp;quot;socketAddress&amp;quot;: {
                &amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                &amp;quot;portValue&amp;quot;: 15006
            }
        },
        &amp;quot;filterChains&amp;quot;: &amp;amp;#91;
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 0
                        }
                    ],
                    &amp;quot;transportProtocol&amp;quot;: &amp;quot;tls&amp;quot;,
                    &amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
                        &amp;quot;istio-peer-exchange&amp;quot;,
                        &amp;quot;istio&amp;quot;
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;config&amp;quot;: {
                                    &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                    &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                    &amp;quot;vm_config&amp;quot;: {
                                        &amp;quot;code&amp;quot;: {
                                            &amp;quot;local&amp;quot;: {
                                                &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                            }
                                        },
                                        &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                        &amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_inbound&amp;quot;
                                    }
                                }
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                            &amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ]
                        }
                    }
                ],
                &amp;quot;transportSocket&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;envoy.transport_sockets.tls&amp;quot;,
                    &amp;quot;typedConfig&amp;quot;: {
                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext&amp;quot;,
                        &amp;quot;commonTlsContext&amp;quot;: {
                            &amp;quot;tlsCertificateSdsSecretConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                    &amp;quot;sdsConfig&amp;quot;: {
                                        &amp;quot;apiConfigSource&amp;quot;: {
                                            &amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
                                            &amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;envoyGrpc&amp;quot;: {
                                                        &amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            &amp;quot;combinedValidationContext&amp;quot;: {
                                &amp;quot;defaultValidationContext&amp;quot;: {},
                                &amp;quot;validationContextSdsSecretConfig&amp;quot;: {
                                    &amp;quot;name&amp;quot;: &amp;quot;ROOTCA&amp;quot;,
                                    &amp;quot;sdsConfig&amp;quot;: {
                                        &amp;quot;apiConfigSource&amp;quot;: {
                                            &amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
                                            &amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;envoyGrpc&amp;quot;: {
                                                        &amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            &amp;quot;alpnProtocols&amp;quot;: &amp;amp;#91;
                                &amp;quot;istio-peer-exchange&amp;quot;,
                                &amp;quot;h2&amp;quot;,
                                &amp;quot;http/1.1&amp;quot;
                            ]
                        },
                        &amp;quot;requireClientCertificate&amp;quot;: true
                    }
                },
                &amp;quot;name&amp;quot;: &amp;quot;virtualInbound&amp;quot;
            },
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 0
                        }
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;config&amp;quot;: {
                                    &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                    &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                    &amp;quot;vm_config&amp;quot;: {
                                        &amp;quot;code&amp;quot;: {
                                            &amp;quot;local&amp;quot;: {
                                                &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                            }
                                        },
                                        &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                        &amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_inbound&amp;quot;
                                    }
                                }
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                            &amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ]
                        }
                    }
                ],
                &amp;quot;name&amp;quot;: &amp;quot;virtualInbound&amp;quot;
            },
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 0
                        }
                    ],
                    &amp;quot;transportProtocol&amp;quot;: &amp;quot;tls&amp;quot;,
                    &amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
                        &amp;quot;http/1.0&amp;quot;,
                        &amp;quot;http/1.1&amp;quot;,
                        &amp;quot;h2c&amp;quot;,
                        &amp;quot;istio-http/1.0&amp;quot;,
                        &amp;quot;istio-http/1.1&amp;quot;,
                        &amp;quot;istio-h2&amp;quot;
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                            &amp;quot;routeConfig&amp;quot;: {
                                &amp;quot;name&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                                &amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
                                    {
                                        &amp;quot;name&amp;quot;: &amp;quot;inbound|http|0&amp;quot;,
                                        &amp;quot;domains&amp;quot;: &amp;amp;#91;
                                            &amp;quot;*&amp;quot;
                                        ],
                                        &amp;quot;routes&amp;quot;: &amp;amp;#91;
                                            {
                                                &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                                &amp;quot;match&amp;quot;: {
                                                    &amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
                                                },
                                                &amp;quot;route&amp;quot;: {
                                                    &amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                                                    &amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
                                                    &amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
                                                },
                                                &amp;quot;decorator&amp;quot;: {
                                                    &amp;quot;operation&amp;quot;: &amp;quot;:0/*&amp;quot;
                                                }
                                            }
                                        ]
                                    }
                                ],
                                &amp;quot;validateClusters&amp;quot;: false
                            },
                            &amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                                &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                                    &amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;tracing&amp;quot;: {
                                &amp;quot;clientSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;randomSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;overallSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                }
                            },
                            &amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
                            &amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;useRemoteAddress&amp;quot;: false,
                            &amp;quot;generateRequestId&amp;quot;: true,
                            &amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
                            &amp;quot;setCurrentClientCertDetails&amp;quot;: {
                                &amp;quot;subject&amp;quot;: true,
                                &amp;quot;dns&amp;quot;: true,
                                &amp;quot;uri&amp;quot;: true
                            },
                            &amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
                                }
                            ],
                            &amp;quot;normalizePath&amp;quot;: true
                        }
                    }
                ],
                &amp;quot;transportSocket&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;envoy.transport_sockets.tls&amp;quot;,
                    &amp;quot;typedConfig&amp;quot;: {
                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext&amp;quot;,
                        &amp;quot;commonTlsContext&amp;quot;: {
                            &amp;quot;tlsCertificateSdsSecretConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                    &amp;quot;sdsConfig&amp;quot;: {
                                        &amp;quot;apiConfigSource&amp;quot;: {
                                            &amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
                                            &amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;envoyGrpc&amp;quot;: {
                                                        &amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            &amp;quot;combinedValidationContext&amp;quot;: {
                                &amp;quot;defaultValidationContext&amp;quot;: {},
                                &amp;quot;validationContextSdsSecretConfig&amp;quot;: {
                                    &amp;quot;name&amp;quot;: &amp;quot;ROOTCA&amp;quot;,
                                    &amp;quot;sdsConfig&amp;quot;: {
                                        &amp;quot;apiConfigSource&amp;quot;: {
                                            &amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
                                            &amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;envoyGrpc&amp;quot;: {
                                                        &amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            &amp;quot;alpnProtocols&amp;quot;: &amp;amp;#91;
                                &amp;quot;h2&amp;quot;,
                                &amp;quot;http/1.1&amp;quot;
                            ]
                        },
                        &amp;quot;requireClientCertificate&amp;quot;: true
                    }
                },
                &amp;quot;name&amp;quot;: &amp;quot;virtualInbound-catchall-http&amp;quot;
            },
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 0
                        }
                    ],
                    &amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
                        &amp;quot;http/1.0&amp;quot;,
                        &amp;quot;http/1.1&amp;quot;,
                        &amp;quot;h2c&amp;quot;
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                            &amp;quot;routeConfig&amp;quot;: {
                                &amp;quot;name&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                                &amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
                                    {
                                        &amp;quot;name&amp;quot;: &amp;quot;inbound|http|0&amp;quot;,
                                        &amp;quot;domains&amp;quot;: &amp;amp;#91;
                                            &amp;quot;*&amp;quot;
                                        ],
                                        &amp;quot;routes&amp;quot;: &amp;amp;#91;
                                            {
                                                &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                                &amp;quot;match&amp;quot;: {
                                                    &amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
                                                },
                                                &amp;quot;route&amp;quot;: {
                                                    &amp;quot;cluster&amp;quot;: &amp;quot;InboundPassthroughClusterIpv4&amp;quot;,
                                                    &amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
                                                    &amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
                                                },
                                                &amp;quot;decorator&amp;quot;: {
                                                    &amp;quot;operation&amp;quot;: &amp;quot;:0/*&amp;quot;
                                                }
                                            }
                                        ]
                                    }
                                ],
                                &amp;quot;validateClusters&amp;quot;: false
                            },
                            &amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                                &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                                    &amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;tracing&amp;quot;: {
                                &amp;quot;clientSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;randomSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;overallSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                }
                            },
                            &amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
                            &amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;useRemoteAddress&amp;quot;: false,
                            &amp;quot;generateRequestId&amp;quot;: true,
                            &amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
                            &amp;quot;setCurrentClientCertDetails&amp;quot;: {
                                &amp;quot;subject&amp;quot;: true,
                                &amp;quot;dns&amp;quot;: true,
                                &amp;quot;uri&amp;quot;: true
                            },
                            &amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
                                }
                            ],
                            &amp;quot;normalizePath&amp;quot;: true
                        }
                    }
                ],
                &amp;quot;name&amp;quot;: &amp;quot;virtualInbound-catchall-http&amp;quot;
            },
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;destinationPort&amp;quot;: 15021,
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.155&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 32
                        }
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.network.wasm.v3.Wasm&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;config&amp;quot;: {
                                    &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                    &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                    &amp;quot;vm_config&amp;quot;: {
                                        &amp;quot;code&amp;quot;: {
                                            &amp;quot;local&amp;quot;: {
                                                &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                            }
                                        },
                                        &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                        &amp;quot;vm_id&amp;quot;: &amp;quot;tcp_stats_inbound&amp;quot;
                                    }
                                }
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;inbound|15021|mgmt-15021|mgmtCluster&amp;quot;,
                            &amp;quot;cluster&amp;quot;: &amp;quot;inbound|15021|mgmt-15021|mgmtCluster&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ]
                        }
                    }
                ],
                &amp;quot;name&amp;quot;: &amp;quot;10.244.2.155_15021&amp;quot;
            },
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;destinationPort&amp;quot;: 9080,
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.155&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 32
                        }
                    ],
                    &amp;quot;applicationProtocols&amp;quot;: &amp;amp;#91;
                        &amp;quot;istio&amp;quot;,
                        &amp;quot;istio-http/1.0&amp;quot;,
                        &amp;quot;istio-http/1.1&amp;quot;,
                        &amp;quot;istio-h2&amp;quot;
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;inbound_10.244.2.155_9080&amp;quot;,
                            &amp;quot;routeConfig&amp;quot;: {
                                &amp;quot;name&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
                                &amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
                                    {
                                        &amp;quot;name&amp;quot;: &amp;quot;inbound|http|9080&amp;quot;,
                                        &amp;quot;domains&amp;quot;: &amp;amp;#91;
                                            &amp;quot;*&amp;quot;
                                        ],
                                        &amp;quot;routes&amp;quot;: &amp;amp;#91;
                                            {
                                                &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                                &amp;quot;match&amp;quot;: {
                                                    &amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
                                                },
                                                &amp;quot;route&amp;quot;: {
                                                    &amp;quot;cluster&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
                                                    &amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
                                                    &amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
                                                },
                                                &amp;quot;decorator&amp;quot;: {
                                                    &amp;quot;operation&amp;quot;: &amp;quot;productpage.istio-bookinfo.svc.cluster.local:9080/*&amp;quot;
                                                }
                                            }
                                        ]
                                    }
                                ],
                                &amp;quot;validateClusters&amp;quot;: false
                            },
                            &amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio_authn&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/istio.envoy.config.filter.http.authn.v2alpha1.FilterConfig&amp;quot;,
                                        &amp;quot;policy&amp;quot;: {
                                            &amp;quot;peers&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;mtls&amp;quot;: {
                                                        &amp;quot;mode&amp;quot;: &amp;quot;PERMISSIVE&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                                &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                                    &amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;tracing&amp;quot;: {
                                &amp;quot;clientSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;randomSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;overallSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                }
                            },
                            &amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
                            &amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;useRemoteAddress&amp;quot;: false,
                            &amp;quot;generateRequestId&amp;quot;: true,
                            &amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
                            &amp;quot;setCurrentClientCertDetails&amp;quot;: {
                                &amp;quot;subject&amp;quot;: true,
                                &amp;quot;dns&amp;quot;: true,
                                &amp;quot;uri&amp;quot;: true
                            },
                            &amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
                                }
                            ],
                            &amp;quot;normalizePath&amp;quot;: true
                        }
                    }
                ],
                &amp;quot;transportSocket&amp;quot;: {
                    &amp;quot;name&amp;quot;: &amp;quot;envoy.transport_sockets.tls&amp;quot;,
                    &amp;quot;typedConfig&amp;quot;: {
                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext&amp;quot;,
                        &amp;quot;commonTlsContext&amp;quot;: {
                            &amp;quot;tlsCertificateSdsSecretConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                    &amp;quot;sdsConfig&amp;quot;: {
                                        &amp;quot;apiConfigSource&amp;quot;: {
                                            &amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
                                            &amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;envoyGrpc&amp;quot;: {
                                                        &amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            &amp;quot;combinedValidationContext&amp;quot;: {
                                &amp;quot;defaultValidationContext&amp;quot;: {},
                                &amp;quot;validationContextSdsSecretConfig&amp;quot;: {
                                    &amp;quot;name&amp;quot;: &amp;quot;ROOTCA&amp;quot;,
                                    &amp;quot;sdsConfig&amp;quot;: {
                                        &amp;quot;apiConfigSource&amp;quot;: {
                                            &amp;quot;apiType&amp;quot;: &amp;quot;GRPC&amp;quot;,
                                            &amp;quot;grpcServices&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;envoyGrpc&amp;quot;: {
                                                        &amp;quot;clusterName&amp;quot;: &amp;quot;sds-grpc&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            &amp;quot;alpnProtocols&amp;quot;: &amp;amp;#91;
                                &amp;quot;h2&amp;quot;,
                                &amp;quot;http/1.1&amp;quot;
                            ]
                        },
                        &amp;quot;requireClientCertificate&amp;quot;: true
                    }
                },
                &amp;quot;name&amp;quot;: &amp;quot;10.244.2.155_9080&amp;quot;
            },
            {
                &amp;quot;filterChainMatch&amp;quot;: {
                    &amp;quot;destinationPort&amp;quot;: 9080,
                    &amp;quot;prefixRanges&amp;quot;: &amp;amp;#91;
                        {
                            &amp;quot;addressPrefix&amp;quot;: &amp;quot;10.244.2.155&amp;quot;,
                            &amp;quot;prefixLen&amp;quot;: 32
                        }
                    ]
                },
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                            &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.tcp.metadataexchange.config.MetadataExchange&amp;quot;,
                            &amp;quot;value&amp;quot;: {
                                &amp;quot;protocol&amp;quot;: &amp;quot;istio-peer-exchange&amp;quot;
                            }
                        }
                    },
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.http_connection_manager&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager&amp;quot;,
                            &amp;quot;statPrefix&amp;quot;: &amp;quot;inbound_10.244.2.155_9080&amp;quot;,
                            &amp;quot;routeConfig&amp;quot;: {
                                &amp;quot;name&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
                                &amp;quot;virtualHosts&amp;quot;: &amp;amp;#91;
                                    {
                                        &amp;quot;name&amp;quot;: &amp;quot;inbound|http|9080&amp;quot;,
                                        &amp;quot;domains&amp;quot;: &amp;amp;#91;
                                            &amp;quot;*&amp;quot;
                                        ],
                                        &amp;quot;routes&amp;quot;: &amp;amp;#91;
                                            {
                                                &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;,
                                                &amp;quot;match&amp;quot;: {
                                                    &amp;quot;prefix&amp;quot;: &amp;quot;/&amp;quot;
                                                },
                                                &amp;quot;route&amp;quot;: {
                                                    &amp;quot;cluster&amp;quot;: &amp;quot;inbound|9080|http|productpage.istio-bookinfo.svc.cluster.local&amp;quot;,
                                                    &amp;quot;timeout&amp;quot;: &amp;quot;0s&amp;quot;,
                                                    &amp;quot;maxGrpcTimeout&amp;quot;: &amp;quot;0s&amp;quot;
                                                },
                                                &amp;quot;decorator&amp;quot;: {
                                                    &amp;quot;operation&amp;quot;: &amp;quot;productpage.istio-bookinfo.svc.cluster.local:9080/*&amp;quot;
                                                }
                                            }
                                        ]
                                    }
                                ],
                                &amp;quot;validateClusters&amp;quot;: false
                            },
                            &amp;quot;httpFilters&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.metadata_exchange&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{}\n&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.metadata_exchange&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio_authn&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/istio.envoy.config.filter.http.authn.v2alpha1.FilterConfig&amp;quot;,
                                        &amp;quot;policy&amp;quot;: {
                                            &amp;quot;peers&amp;quot;: &amp;amp;#91;
                                                {
                                                    &amp;quot;mtls&amp;quot;: {
                                                        &amp;quot;mode&amp;quot;: &amp;quot;PERMISSIVE&amp;quot;
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.cors&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.cors.v2.Cors&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.fault&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.fault.v2.HTTPFault&amp;quot;
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;istio.stats&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/udpa.type.v1.TypedStruct&amp;quot;,
                                        &amp;quot;typeUrl&amp;quot;: &amp;quot;type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm&amp;quot;,
                                        &amp;quot;value&amp;quot;: {
                                            &amp;quot;config&amp;quot;: {
                                                &amp;quot;configuration&amp;quot;: &amp;quot;{\n  \&amp;quot;debug\&amp;quot;: \&amp;quot;false\&amp;quot;,\n  \&amp;quot;stat_prefix\&amp;quot;: \&amp;quot;istio\&amp;quot;\n}\n&amp;quot;,
                                                &amp;quot;root_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;,
                                                &amp;quot;vm_config&amp;quot;: {
                                                    &amp;quot;code&amp;quot;: {
                                                        &amp;quot;local&amp;quot;: {
                                                            &amp;quot;inline_string&amp;quot;: &amp;quot;envoy.wasm.stats&amp;quot;
                                                        }
                                                    },
                                                    &amp;quot;runtime&amp;quot;: &amp;quot;envoy.wasm.runtime.null&amp;quot;,
                                                    &amp;quot;vm_id&amp;quot;: &amp;quot;stats_inbound&amp;quot;
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.router&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.http.router.v2.Router&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;tracing&amp;quot;: {
                                &amp;quot;clientSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;randomSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                },
                                &amp;quot;overallSampling&amp;quot;: {
                                    &amp;quot;value&amp;quot;: 100
                                }
                            },
                            &amp;quot;serverName&amp;quot;: &amp;quot;istio-envoy&amp;quot;,
                            &amp;quot;streamIdleTimeout&amp;quot;: &amp;quot;0s&amp;quot;,
                            &amp;quot;accessLog&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;name&amp;quot;: &amp;quot;envoy.file_access_log&amp;quot;,
                                    &amp;quot;typedConfig&amp;quot;: {
                                        &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog&amp;quot;,
                                        &amp;quot;path&amp;quot;: &amp;quot;/dev/stdout&amp;quot;,
                                        &amp;quot;format&amp;quot;: &amp;quot;&amp;amp;#91;%START_TIME%] \&amp;quot;%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\&amp;quot; %RESPONSE_CODE% %RESPONSE_FLAGS% \&amp;quot;%DYNAMIC_METADATA(istio.mixer:status)%\&amp;quot; \&amp;quot;%UPSTREAM_TRANSPORT_FAILURE_REASON%\&amp;quot; %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \&amp;quot;%REQ(X-FORWARDED-FOR)%\&amp;quot; \&amp;quot;%REQ(USER-AGENT)%\&amp;quot; \&amp;quot;%REQ(X-REQUEST-ID)%\&amp;quot; \&amp;quot;%REQ(:AUTHORITY)%\&amp;quot; \&amp;quot;%UPSTREAM_HOST%\&amp;quot; %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n&amp;quot;
                                    }
                                }
                            ],
                            &amp;quot;useRemoteAddress&amp;quot;: false,
                            &amp;quot;generateRequestId&amp;quot;: true,
                            &amp;quot;forwardClientCertDetails&amp;quot;: &amp;quot;APPEND_FORWARD&amp;quot;,
                            &amp;quot;setCurrentClientCertDetails&amp;quot;: {
                                &amp;quot;subject&amp;quot;: true,
                                &amp;quot;dns&amp;quot;: true,
                                &amp;quot;uri&amp;quot;: true
                            },
                            &amp;quot;upgradeConfigs&amp;quot;: &amp;amp;#91;
                                {
                                    &amp;quot;upgradeType&amp;quot;: &amp;quot;websocket&amp;quot;
                                }
                            ],
                            &amp;quot;normalizePath&amp;quot;: true
                        }
                    }
                ],
                &amp;quot;name&amp;quot;: &amp;quot;10.244.2.155_9080&amp;quot;
            }
        ],
        &amp;quot;listenerFilters&amp;quot;: &amp;amp;#91;
            {
                &amp;quot;name&amp;quot;: &amp;quot;envoy.listener.original_dst&amp;quot;,
                &amp;quot;typedConfig&amp;quot;: {
                    &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.original_dst.v2.OriginalDst&amp;quot;
                }
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;envoy.listener.tls_inspector&amp;quot;,
                &amp;quot;typedConfig&amp;quot;: {
                    &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.tls_inspector.v2.TlsInspector&amp;quot;
                }
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;envoy.listener.http_inspector&amp;quot;,
                &amp;quot;typedConfig&amp;quot;: {
                    &amp;quot;@type&amp;quot;: &amp;quot;type.googleapis.com/envoy.config.filter.listener.http_inspector.v2.HttpInspector&amp;quot;
                }
            }
        ],
        &amp;quot;listenerFiltersTimeout&amp;quot;: &amp;quot;1s&amp;quot;,
        &amp;quot;continueOnListenerFiltersTimeout&amp;quot;: true,
        &amp;quot;trafficDirection&amp;quot;: &amp;quot;INBOUND&amp;quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Check more istio practice detail at my tech blog &lt;a href=&#34;https://imesh.club&#34;&gt;https://imesh.club&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Istio | Enhancing ingress service capabilities</title>
      <link>/posts/f5-istio-work-together/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/f5-istio-work-together/</guid>
      <description>F5 make istio works better</description>
      <content>&lt;p&gt;In the Istio system, in order to ensure the unity of policy coordination and experience, users will consider using Istio&amp;rsquo;s own Ingressgateway as the entrance to north-south traffic. Ingressgateway is generally deployed by deployment of multiple pods, scattered on multiple nodes of the cluster, depending on Due to the specific exposure type, especially in on-prem deployment, it is still necessary to deploy relevant load balancers outside the k8s cluster to load balance these ingressgateways, on the one hand, it can avoid access difficulties and operation and maintenance difficulties caused by multiple entrances. On the other hand, the high-performance and high-reliability F5 BIGIP can provide more function control and security value-added services for k8s cluster entrance traffic, which is similar to the Ingress controller.&lt;/p&gt;
&lt;p&gt;Unlike exposing ordinary service svc to external BIG-IP, ingressgateway itself is a collection point of various service ports. It may itself listen to many ports, so it is not easy to treat ingressgateway as a single ordinary svc. This article mainly explains how to combine Istio ingressgateway with BIG-IP to enhance the entrance business capability.&lt;/p&gt;
&lt;p&gt;The possible methods on the network structure are:&lt;/p&gt;
&lt;p&gt;External load balancer &amp;mdash; access to &amp;ndash;&amp;gt; ingressgateway&amp;rsquo;s nodeport port&lt;/p&gt;
&lt;p&gt;External load balancer &amp;mdash; access to &amp;ndash;&amp;gt; ingressgateway direct endpoints port (direct to pod)&lt;/p&gt;
&lt;p&gt;From the point of view of performance, it is naturally the second direct pod method mentioned above that has better performance, depending on the network model of the k8s cluster. If the external and pod can be directly routed or the two-layer direct connection is naturally the easiest, if it cannot be directly routed, it needs to be based on vxlan and other tunnels to achieve pod direct. F5 BIGIP supports Layer 2 direct, dynamic routing or vxlan tunnel mode. Refer to this article for detailed network deployment structure , or search for related articles in this blog. In the following, we assume that F5 BIGIP has implemented vxlan with k8s cluster, which can reach the pod directly. The final data path is as follows:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;client&amp;ndash;&amp;gt;F5BIGIP&amp;ndash;&amp;gt;Istio ingressgateway pod&amp;ndash;&amp;gt;endpoints&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The underlying implementation of Istio Ingressgateway is envoy. When we publish a service to Ingressgateway through Gateway+VirtualService resource, Ingressgateway will listen to the port specified in Gateway. Therefore, once a new service is released, there may be a new listening port. However, when we deploy the ingressgateway pod, we will not configure all the external mappings in advance. That is to say, the port that the container in the pod listens to is not configured in the deployment of the pod. Don’t worry, it can be directly accessed at this time. This listening port on the pod, although the deployment port is not specified in advance.&lt;/p&gt;
&lt;p&gt;So how to load balance for Ingressgateway through BIGIP and dynamically discover these new monitoring services? The answer is naturally the solution described in this article. F5 BIGIP provides a controller that runs inside k8s and automatically pushes these changes to BIGIP. on. Since the same k8s svc contains one more port, you need to pay attention to the servicePort parameter when publishing this k8s svc to F5. The specific publishing process refers to the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Deploy Istio Gateway+VirtualService resources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit the k8s svc corresponding to the existing Ingressgateway and add new port and target port configurations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure a new F5 configmap resource and specify the corresponding servicePort to publish the new service&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;demo&#34;&gt;DEMO:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;First check the existing Ingressgateway pod ports are as follows, port 32400 is not exposed in the container port&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;        name: istio-proxy
        ports:
        - containerPort: 15020
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 31400
          protocol: TCP
        - containerPort: 15443
          protocol: TCP
        - containerPort: 15011
          protocol: TCP
        - containerPort: 15012
          protocol: TCP
        - containerPort: 8060
          protocol: TCP
        - containerPort: 853
          protocol: TCP
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Deploy Istio Gateway and VirtualService&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: tcp-echo-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 32400
      name: tcp
      protocol: TCP
    hosts:
    - &amp;quot;*&amp;quot;
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: tcp-echo-destination
spec:
  host: tcp-echo
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: tcp-echo
spec:
  hosts:
  - &amp;quot;*&amp;quot;
  gateways:
  - tcp-echo-gateway
  tcp:
  - match:
    - port: 32400   ###########32400端口监听
    route:
    - destination:
        host: tcp-echo
        port:
          number: 9000
        subset: v1
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;After the deployment is complete, check envoy to confirm that the monitoring has been issued&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; {
        &amp;quot;name&amp;quot;: &amp;quot;0.0.0.0_32400&amp;quot;,
        &amp;quot;address&amp;quot;: {
            &amp;quot;socketAddress&amp;quot;: {
                &amp;quot;address&amp;quot;: &amp;quot;0.0.0.0&amp;quot;,
                &amp;quot;portValue&amp;quot;: 32400
            }
        },
        &amp;quot;filterChains&amp;quot;: &amp;amp;#91;
            {
                &amp;quot;filters&amp;quot;: &amp;amp;#91;
      。。。。。。。。。。省略。。。。。。。。。。
                    {
                        &amp;quot;name&amp;quot;: &amp;quot;envoy.tcp_proxy&amp;quot;,
                        &amp;quot;typedConfig&amp;quot;: {
                            &amp;quot;@type&amp;quot;: 
。。。。。

                            &amp;quot;cluster&amp;quot;: &amp;quot;outbound|9000|v1|tcp-echo.istio-io-tcp-traffic-shifting.svc.cluster.local&amp;quot;,

。。。。。
                        }
                    }
                ]
            }
        ],
        &amp;quot;trafficDirection&amp;quot;: &amp;quot;OUTBOUND&amp;quot;
    },
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Modify the existing Ingressgateway svc, increase the external exposure of 32400 port&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl edit svc istio-ingressgateway -n istio-system -o yaml

修改前：
  ports:
  - name: status-port
    nodePort: 31702
    port: 15020
    protocol: TCP
    targetPort: 15020
  - name: http2
    nodePort: 31547
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    nodePort: 31956
    port: 443
    protocol: TCP
    targetPort: 8443
  - name: tcp
    nodePort: 30775
    port: 31400
    protocol: TCP
    targetPort: 31400
  - name: tls
    nodePort: 30536
    port: 15443
    protocol: TCP
    targetPort: 15443
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  sessionAffinity: None
  type: LoadBalancer

修改后：

  ports:
  - name: status-port
    nodePort: 31702
    port: 15020
    protocol: TCP
    targetPort: 15020
  - name: http2
    nodePort: 31547
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    nodePort: 31956
    port: 443
    protocol: TCP
    targetPort: 8443
  - name: tcp
    nodePort: 30775
    port: 31400
    protocol: TCP
    targetPort: 31400
  - name: tcp2
    nodePort: 30776
    port: 32400
    protocol: TCP
    targetPort: 32400  #########新增端口
  - name: tls
    nodePort: 30536
    port: 15443
    protocol: TCP
    targetPort: 15443


root@k8s-master-v1-16 ~]# kubectl  get svc -n istio-system
NAME                        TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                                      AGE
grafana                     ClusterIP      10.96.165.101    &amp;amp;lt;none&amp;gt;        3000/TCP                                                                                     2d
istio-egressgateway         ClusterIP      10.110.88.185    &amp;amp;lt;none&amp;gt;        80/TCP,443/TCP,15443/TCP                                                                     2d
istio-ingressgateway        LoadBalancer   10.96.122.225    &amp;amp;lt;pending&amp;gt;     15020:31702/TCP,80:31547/TCP,443:31956/TCP,31400:30775/TCP,32400:30776/TCP,15443:30536/TCP   2d
istiod                      ClusterIP      10.102.252.88    &amp;amp;lt;none&amp;gt;        15010/TCP,15012/TCP,443/TCP,15014/TCP,53/UDP,853/TCP                                         2d
jaeger-agent                ClusterIP      None             &amp;amp;lt;none&amp;gt;        5775/UDP,6831/UDP,6832/UDP                                                                   2d
jaeger-collector            ClusterIP      10.105.130.171   &amp;amp;lt;none&amp;gt;        14267/TCP,14268/TCP,14250/TCP                                                                2d
jaeger-collector-headless   ClusterIP      None             &amp;amp;lt;none&amp;gt;        14250/TCP                                                                                    2d
jaeger-query                ClusterIP      10.99.139.251    &amp;amp;lt;none&amp;gt;        16686/TCP                                                                                    2d
kiali                       ClusterIP      10.101.189.237   &amp;amp;lt;none&amp;gt;        20001/TCP                                                                                    2d
prometheus                  ClusterIP      10.109.157.108   &amp;amp;lt;none&amp;gt;        9090/TCP                                                                                     2d
tracing                     ClusterIP      10.101.62.56     &amp;amp;lt;none&amp;gt;        80/TCP                                                                                       2d
zipkin                      ClusterIP      10.98.181.246    &amp;amp;lt;none&amp;gt;        9411/TCP
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Publish the 32400 servicePort to F5, at this time you need to add an F5 configmap, pay attention to the Chinese comments&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kind: ConfigMap
apiVersion: v1
metadata:
  name: istio-ingressgateway.32400.vs
  namespace: istio-system
  labels:
    f5type: virtual-server
data:
  # See the f5-schema table for schema-controller compatibility
  # https://clouddocs.f5.com/containers/latest/releases_and_versioning.html#f5-schema
  schema: &amp;quot;f5schemadb://bigip-virtual-server_v0.1.7.json&amp;quot;
  data: |
    {
      &amp;quot;virtualServer&amp;quot;: {
        &amp;quot;backend&amp;quot;: {
          &amp;quot;serviceName&amp;quot;: &amp;quot;istio-ingressgateway&amp;quot;,
          &amp;quot;servicePort&amp;quot;: 32400
####It is important here. The port of the corresponding k8s svc is filled in here. The F5 CIS controller will automatically find the targetPort (CIS cluster mode) or nodeport (CIS nodeport mode) corresponding to the servicePort
        },
        &amp;quot;frontend&amp;quot;: {
          &amp;quot;virtualAddress&amp;quot;: {
            &amp;quot;port&amp;quot;: 31400,
            &amp;quot;bindAddr&amp;quot;: &amp;quot;172.16.100.195&amp;quot;
          },
          &amp;quot;partition&amp;quot;: &amp;quot;k8s&amp;quot;,
          &amp;quot;balance&amp;quot;: &amp;quot;least-connections-member&amp;quot;,
          &amp;quot;mode&amp;quot;: &amp;quot;tcp&amp;quot;
        }
      }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;F5 will automatically generate the following configuration in the red box:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imesh.club/upload/2020/06/1592839169293-1024x418.jpg?v=1592839202&#34; alt=&#34;F5 will automatically generate the following configuration in the red box:&#34;&gt;&lt;/p&gt;
&lt;p&gt;Simulate access to the business from the outside, you can see that it can be accessed normally&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# jlin @ Mac in ~ &amp;amp;#91;myf5.net]
$ for i in {1..2000}; do (date; sleep 1) | nc istiobookinfo.lab.f5se.io 32400; done
one Mon Jun 22 22:24:17 CST 2020
one Mon Jun 22 22:24:18 CST 2020
one Mon Jun 22 22:24:19 CST 2020
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, the newly released service monitor on Istio Ingressgateway is successfully automatically posted to BIGIP. Users only need to access BIGIP&amp;rsquo;s VS to access services within k8s (on Istio Ingressgateway).&lt;/p&gt;
&lt;p&gt;For the subsequent release of other new port services, repeat the above steps.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The above configuration uses the non-F5 AS3 configmap configuration method, if you are using CIS 2.0, you need to pay attention to this issue
&lt;a href=&#34;https://github.com/F5Networks/k8s-bigip-ctlr/issues/1341&#34;&gt;https://github.com/F5Networks/k8s-bigip-ctlr/issues/1341&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Check more istio practice detail at my tech blog &lt;a href=&#34;https://imesh.club&#34;&gt;https://imesh.club&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
